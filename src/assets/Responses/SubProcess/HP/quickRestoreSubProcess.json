{
  "ResultData": {
    "ctype": "page",
    "uuid": "pageUUID",
    "contentClass": "",
    "css": "",
    "visibility": true,
    "componentActionList": [],
    "onLoadActions": [
      {
        "type": "microservice",
        "config": {
          "microserviceId": "getFFValue",
          "isLocal": false,
          "LocalService": "assets/Responses/mockRepStop.json",
          "requestMethod": "get",
          "params": {
            "ffId": "#getReferenceDataKeys.qrffId",
            "userName": "#userAccountInfo.PersonalDetails.USERID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": []
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorMsg",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorMsg",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "config": {
          "microserviceId": "getFFByWc",
          "isLocal": false,
          "LocalService": "assets/Responses/repairMockEcoResponse.json",
          "requestMethod": "get",
          "params": {
            "clientId": "#repairUnitInfo.CLIENT_ID",
            "routeName": "#repairUnitInfo.ROUTE",
            "contrId": "#repairUnitInfo.CONTRACT_ID",
            "wcId": "#repairUnitInfo.WORKCENTER_ID",
            "userName": "#userAccountInfo.PersonalDetails.USERID",
            "itemId": "#repairUnitInfo.ITEM_ID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": []
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorResp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorResp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "condition",
        "config": {
          "operation": "isValid",
          "lhs": "#getFFByWc",
          "lhsKeyName": "ffName",
          "lhsKeyValue": "QR_REASON",
          "lhsSecondKeyName": "ffValue"
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "reasonCodeDeafultValue",
                  "data": "#lhsValue"
                }
              }
            ]
          },
          "onFailure": {
            "actions": []
          }
        }
      },
      {
        "type": "updateComponent",
        "config": {
          "key": "ReasonCode1UUID#@",
          "dropDownProperties": {
            "options": "#getFFValue"
          }
        }
      }
    ],
    "hooks": [
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getBiosAlertDetailsAssessment",
          "isLocal": false,
          "LocalService": "assets/Responses/repairMockBIOSResponse.json",
          "requestMethod": "get",
          "params": {
            "customInstructionType": "BIOS",
            "sourceType": "#getReferenceDataKeys.sourceType",
            "serialNumber": "",
            "partNumber": "",
            "productPlatform": "#discrepancyPartAndWarrantyDetails.PRODUCT_PLATFORM",
            "secondSource": "",
            "username": "#userAccountInfo.PersonalDetails.USERID",
            "locationId": "#userSelectedLocation",
            "clientId": "#userSelectedClient",
            "contractId": "#userSelectedContract"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "biosVersionTitleUUID",
                  "properties": {
                    "titleValue": "#getBiosAlertDetailsAssessment.0.bios"
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": []
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getSoftwareAlertDetailsAssessment",
          "isLocal": false,
          "LocalService": "assets/Responses/repairMockEcoResponse.json",
          "requestMethod": "get",
          "params": {
            "customInstructionType": "SOFTWARE",
            "sourceType": "PARTNO",
            "serialNumber": "",
            "partNumber": "#discrepancyUnitInfo.PART_NO",
            "productPlatform": "",
            "secondSource": "",
            "username": "#userAccountInfo.PersonalDetails.USERID",
            "locationId": "#userSelectedLocation",
            "clientId": "#userSelectedClient",
            "contractId": "#userSelectedContract"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "softwareVersionTitleUUID",
                  "properties": {
                    "titleValue": "#getSoftwareAlertDetailsAssessment.0.software"
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": []
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getInitialDetailsAssessment",
          "requestMethod": "get",
          "LocalService": "assets/Responses/repairAssessementResponse.json",
          "isLocal": false,
          "params": {
            "itemBcn": "#discrepancyUnitInfo.ITEM_BCN",
            "roHeaderFFIds": "#getReferenceDataKeys.roheaderffIds",
            "roLineFFIds": "#getReferenceDataKeys.rolineffIds",
            "workCenterFFIds": "#getReferenceDataKeys.workcenterffIds",
            "itemId": "#discrepancyUnitInfo.ITEM_ID",
            "userName": "#userAccountInfo.PersonalDetails.USERID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "failCodeUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.failCode"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "osReinstallUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.osReinstallAllowed"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "winPasswordUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.windowsPassword"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "biosPasswordUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.biosPassword"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "expectedBiosUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.expectedBiosVersion"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "osLanguageUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.osLanguage"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "bsodFieldUUID",
                  "properties": {
                    "titleValue": "#getInitialDetailsAssessment.bsod"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "customerComplaintTitleUUID",
                  "properties": {
                    "text": "#getInitialDetailsAssessment.customerComplaints"
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "obaAssessmentPanelUUID",
                  "properties": {
                    "disabled": false
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "No Data in Initial Assessment",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getAlertDetailsAssessment",
          "requestMethod": "get",
          "LocalService": "assets/Responses/repairMockAlertResponse.json",
          "isLocal": false,
          "params": {
            "customInstructionType": "ALERT",
            "sourceType": "#getReferenceDataKeys.sourceType",
            "serialNumber": "#discrepancyUnitInfo.SERIAL_NO",
            "partNumber": "#discrepancyUnitInfo.PART_NO",
            "productPlatform": "#discrepancyPartAndWarrantyDetails.PRODUCT_PLATFORM",
            "secondSource": "",
            "username": "#userAccountInfo.PersonalDetails.USERID",
            "locationId": "#userSelectedLocation",
            "clientId": "#userSelectedClient",
            "contractId": "#userSelectedContract",
            "fat": "#discrepancyUnitInfo.FAT"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "alertDataPanelUUID",
                  "properties": {
                    "titleValue": "#getAlertDetailsAssessment"
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "deleteComponent",
                "eventSource": "click",
                "config": {
                  "key": "alertPanelUUID"
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getassemblybyproduct",
          "requestMethod": "get",
          "params": {
            "productPlatform": "#discrepancyPartAndWarrantyDetails.PRODUCT_PLATFORM",
            "userName": "#userAccountInfo.PersonalDetails.USERID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "getassemblybyproductResp",
                  "data": "responseData"
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorDisp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorDisp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "eventSource": "change",
        "config": {
          "microserviceId": "getActionCode",
          "requestMethod": "get",
          "params": {
            "locationId": "#repairUnitInfo.LOCATION_ID",
            "clientId": "#repairUnitInfo.CLIENT_ID",
            "contractId": "#repairUnitInfo.CONTRACT_ID",
            "orderProcessTypeCode": "#repairUnitInfo.ROUTE",
            "workcenterId": "23383",
            "actionTypes": "Software",
            "userName": "#userAccountInfo.PersonalDetails.USERID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "getActionCodeSoftwareResp",
                  "data": "responseData"
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorResp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorResp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "eventSource": "change",
        "config": {
          "microserviceId": "getCommodity",
          "requestMethod": "get",
          "params": {
            "locationId": "#repairUnitInfo.LOCATION_ID",
            "clientId": "#repairUnitInfo.CLIENT_ID",
            "contractId": "#repairUnitInfo.CONTRACT_ID",
            "route": "#repairUnitInfo.ROUTE",
            "workcenterId": "23383",
            "actionCode": "37",
            "userName": "#userAccountInfo.PersonalDetails.USERID"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "getCommoditySoftware",
                  "data": "responseData"
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorResp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorResp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "context",
        "hookType": "afterInit",
        "config": {
          "requestMethod": "add",
          "key": "confirmAccessoriesFlexFieldsData",
          "data": ""
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "eventSource": "click",
        "config": {
          "microserviceId": "getaccessfffromrec",
          "requestMethod": "get",
          "params": {
            "pitemId": "#repairUnitInfo.ITEM_ID",
            "pclientId": "#repairUnitInfo.CLIENT_ID",
            "pcontractId": "#repairUnitInfo.CONTRACT_ID",
            "pOpt": "IRMA",
            "puserName": "#loginUUID.username"
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "confirmAccessoriesUUID",
                  "properties": {
                    "hidden": false
                  }
                }
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "confirmAccessoriesFlexFieldsData",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "confirmAccessoriesListUUID",
                  "properties": {
                    "flexCount": "#confirmAccessoriesFlexFieldsData",
                    "label": ""
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "updateComponent",
                "config": {
                  "key": "quickRestoreTimeoutUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "change"
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "accessoryFilledFalse",
                  "data": "False"
                },
                "eventSource": "click"
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorResp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorResp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "context",
        "hookType": "afterInit",
        "config": {
          "requestMethod": "add",
          "key": "vftStatusFlag",
          "data": "Invalid"
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "hpcommtmooctopus",
          "LocalService": "assets/Responses/performFA.json",
          "isLocal": false,
          "requestMethod": "post",
          "body": {
            "locationId": "#repairUnitInfo.LOCATION_ID",
            "clientId": "#repairUnitInfo.CLIENT_ID",
            "contractId": "#repairUnitInfo.CONTRACT_ID",
            "serialnumber": "#repairUnitInfo.SERIAL_NO",
            "workOrderId": "#repairUnitInfo.WORKORDER_ID",
            "itemId": "#repairUnitInfo.ITEM_ID",
            "triggerType": "TIMEOUT",
            "username": "#userAccountInfo.PersonalDetails.USERID",
            "resultCode": ""
          },
          "toBeStringified": true
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "hpcommtmooctopusResp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "octopusStatusUUID",
                  "updateParent": true,
                  "properties": {
                    "text": "Valid",
                    "labelClass": "common-width body saved-green"
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "DSNStatusUUID",
                  "updateParent": true,
                  "properties": {
                    "text": "Valid",
                    "labelClass": "common-width body saved-green"
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "condition",
                "config": {
                  "operation": "isContains",
                  "lhs": "#hpcommtmooctopusResp",
                  "rhs": "OCTOPUS result not found"
                },
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "octopusStatusUUID",
                          "updateParent": true,
                          "properties": {
                            "text": "Invalid",
                            "labelClass": "common-width body light-red"
                          }
                        }
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": []
                  }
                }
              },
              {
                "type": "condition",
                "config": {
                  "operation": "isContains",
                  "lhs": "#hpcommtmooctopusResp",
                  "rhs": "DSN result not found"
                },
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "DSNStatusUUID",
                          "updateParent": true,
                          "properties": {
                            "text": "Invalid",
                            "labelClass": "common-width body light-red"
                          }
                        }
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": []
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "octopusRefreshUUID",
                  "updateParent": true,
                  "properties": {
                    "linkClass": "icon-disabled"
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "context",
                "hookType": "afterInit",
                "config": {
                  "requestMethod": "add",
                  "key": "vftStatusFlag",
                  "data": "Valid"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "vftTaskUUID",
                  "properties": {
                    "expanded": false,
                    "disabled": true,
                    "header": {
                      "title": "Valid Final Functional Test Check (required for VFT)",
                      "icon": "description",
                      "iconClass": "active-header",
                      "status": "Valid",
                      "headerStatusClass": "body saved-green"
                    }
                  }
                },
                "eventSource": "click"
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "hpcommtmooctopusRespError",
                  "data": "responseData"
                }
              },
              {
                "type": "condition",
                "config": {
                  "operation": "isContains",
                  "lhs": "#hpcommtmooctopusRespError",
                  "rhs": "OCTOPUS test FAILED"
                },
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "condition",
                        "config": {
                          "operation": "isContains",
                          "lhs": "#hpcommtmooctopusRespError",
                          "rhs": "DSN test PASSED"
                        },
                        "responseDependents": {
                          "onSuccess": {
                            "actions": [
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "DSNStatusUUID",
                                  "updateParent": true,
                                  "properties": {
                                    "text": "Valid",
                                    "labelClass": "common-width body saved-green"
                                  }
                                },
                                "eventSource": "click"
                              },
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "vftStatusFlag",
                                  "data": "Valid"
                                }
                              }
                            ]
                          },
                          "onFailure": {
                            "actions": [
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "vftStatusFlag",
                                  "data": "Invalid"
                                }
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "octopusStatusUUID",
                                  "updateParent": true,
                                  "properties": {
                                    "text": "Invalid",
                                    "labelClass": "common-width body light-red"
                                  }
                                },
                                "eventSource": "click"
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "DSNStatusUUID",
                                  "updateParent": true,
                                  "properties": {
                                    "text": "Invalid",
                                    "labelClass": "common-width body light-red"
                                  }
                                },
                                "eventSource": "click"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": [
                      {
                        "type": "condition",
                        "config": {
                          "operation": "isContains",
                          "lhs": "#hpcommtmooctopusRespError",
                          "rhs": "DSN test FAILED"
                        },
                        "responseDependents": {
                          "onSuccess": {
                            "actions": [
                              {
                                "type": "condition",
                                "config": {
                                  "operation": "isContains",
                                  "lhs": "#hpcommtmooctopusRespError",
                                  "rhs": "OCTOPUS test PASSED"
                                },
                                "responseDependents": {
                                  "onSuccess": {
                                    "actions": [
                                      {
                                        "type": "updateComponent",
                                        "config": {
                                          "key": "octopusStatusUUID",
                                          "updateParent": true,
                                          "properties": {
                                            "text": "Valid",
                                            "labelClass": "common-width body saved-green"
                                          }
                                        },
                                        "eventSource": "click"
                                      },
                                      {
                                        "type": "context",
                                        "config": {
                                          "requestMethod": "add",
                                          "key": "vftStatusFlag",
                                          "data": "Valid"
                                        }
                                      }
                                    ]
                                  },
                                  "onFailure": {
                                    "actions": [
                                      {
                                        "type": "context",
                                        "config": {
                                          "requestMethod": "add",
                                          "key": "vftStatusFlag",
                                          "data": "Invalid"
                                        }
                                      },
                                      {
                                        "type": "updateComponent",
                                        "config": {
                                          "key": "octopusStatusUUID",
                                          "updateParent": true,
                                          "properties": {
                                            "text": "Invalid",
                                            "labelClass": "common-width body light-red"
                                          }
                                        },
                                        "eventSource": "click"
                                      },
                                      {
                                        "type": "updateComponent",
                                        "config": {
                                          "key": "DSNStatusUUID",
                                          "updateParent": true,
                                          "properties": {
                                            "text": "Invalid",
                                            "labelClass": "common-width body light-red"
                                          }
                                        },
                                        "eventSource": "click"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "onFailure": {
                            "actions": [
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "vftStatusFlag",
                                  "data": "Invalid"
                                }
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "octopusStatusUUID",
                                  "updateParent": true,
                                  "properties": {
                                    "text": "Invalid",
                                    "labelClass": "common-width body light-red"
                                  }
                                },
                                "eventSource": "click"
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "DSNStatusUUID",
                                  "updateParent": true,
                                  "properties": {
                                    "text": "Invalid",
                                    "labelClass": "common-width body light-red"
                                  }
                                },
                                "eventSource": "click"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "microservice",
        "hookType": "afterInit",
        "config": {
          "microserviceId": "getResultCodeByValidateResult",
          "requestMethod": "get",
          "params": {
            "bcn": "#repairUnitInfo.ITEM_BCN",
            "validateResult": 0
          }
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "resultCodesForDiscrepancy",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "quickRestoreTimeoutUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "change"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "quickRestoreResultCodesUUID",
                  "dropDownProperties": {
                    "options": "#resultCodesForDiscrepancy"
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "errorDisp",
                  "data": "responseData"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "#errorDisp",
                    "isShown": true
                  }
                }
              }
            ]
          }
        }
      },
      {
        "type": "condition",
        "hookType": "afterInit",
        "config": {
          "operation": "isContains",
          "lhs": "#discrepancyUnitInfo.PART_DESC",
          "rhs": "Renew"
        },
        "responseDependents": {
          "onSuccess": {
            "actions": [
              {
                "type": "splitWord",
                "config": {
                  "key": "modelValueText",
                  "source": "#discrepancyUnitInfo.PART_DESC",
                  "splitWord": "Renew"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "printLabelUUID",
                  "fieldProperties": {
                    "modelNr": "#modelValueText"
                  }
                }
              }
            ]
          },
          "onFailure": {
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "modelValueText",
                  "data": "#discrepancyUnitInfo.PART_DESC"
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "printLabelUUID",
                  "fieldProperties": {
                    "modelNr": "#modelValueText"
                  }
                }
              }
            ]
          }
        }
      }
    ],
    "validations": [],
    "action": [],
    "header": [
      {
        "ctype": "breadcrumb",
        "breadcrumbs": [
          {
            "label": "#userSelectedLocationName"
          },
          {
            "label": "#userSelectedClientName"
          },
          {
            "label": "#userSelectedContractName"
          }
        ]
      },
      {
        "ctype": "toolbar",
        "toolbarClass": "pagecontent-header",
        "items": [
          {
            "ctype": "title",
            "uuid": "subProcessTitleUUID",
            "titleValue": "Quick Restore",
            "titleClass": "section-title"
          },
          {
            "ctype": "iconbutton",
            "iconButtonClass": "headeropen-button",
            "text": "",
            "uuid": "pageopenUUID",
            "visibility": true,
            "disabled": false,
            "hidden": false,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "icon": "menu_open",
            "disableRipple": true,
            "iconClass": "header-icon",
            "actions": [
              {
                "type": "toggle",
                "eventSource": "click",
                "name": "subProcessRightNavref"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "openUUID",
                  "properties": {
                    "hidden": false
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "pageopenUUID",
                  "properties": {
                    "hidden": true
                  }
                },
                "eventSource": "click"
              }
            ]
          }
        ]
      }
    ],
    "items": [
      {
        "ctype": "title",
        "uuid": "successTitleUUID",
        "titleClass": "success-title",
        "isShown": false
      },
      {
        "ctype": "title",
        "uuid": "errorTitleUUID",
        "containerId": "prebodysectionone",
        "titleClass": "error-title",
        "isShown": false
      },
      {
        "ctype": "taskPanel",
        "containerId": "prebodysectionone",
        "header": {
          "title": "Alert",
          "icon": "description",
          "iconClass": "active-header"
        },
        "expanded": "true",
        "hideToggle": "true",
        "isKeepExpanded": true,
        "uuid": "alertPanelUUID",
        "isBasedOnApiData": true,
        "visibility": true,
        "hooks": [
          {
            "type": "updateComponent",
            "config": {
              "key": "errorTitleUUID",
              "properties": {
                "titleValue": "",
                "isShown": true
              }
            },
            "hookType": "afterInit"
          }
        ],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "disabled",
            "uuid": "alertPanelDisabled",
            "disabledClass": "disabledFalse"
          },
          {
            "ctype": "title",
            "uuid": "alertDataPanelUUID",
            "titleClass": "sidenav-title body2 assessment-alert",
            "title": "",
            "titleValue": ""
          }
        ],
        "footer": []
      },
      {
        "ctype": "taskPanel",
        "title": "",
        "containerId": "prebodysectionone",
        "header": {
          "title": "QR Details",
          "icon": "description",
          "class": "font-weight-700",
          "iconClass": "active-header"
        },
        "expanded": false,
        "hideToggle": "true",
        "uuid": "timeInTaskUUID",
        "isBasedOnApiData": true,
        "visibility": false,
        "hooks": [],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "title",
            "title": "Timed In: ",
            "titleValue": "#getTimeInDetailsResp.timedIn",
            "uuid": "timeInTitleUUID",
            "titleClass": "subtitle1"
          },
          {
            "ctype": "title",
            "title": "Elapsed Time:  ",
            "titleValue": "#getTimeInDetailsResp.elapsedTime",
            "uuid": "elapsedTimeTitleUUID",
            "titleClass": "subtitle1"
          }
        ],
        "footer": []
      },
      {
        "ctype": "taskPanel",
        "containerId": "prebodysectionone",
        "header": {
          "title": "Initial Assessment",
          "icon": "description",
          "statusIcon": "hourglass_empty",
          "statusClass": "incomplete-status"
        },
        "expanded": true,
        "hideToggle": true,
        "intialTaskpanel": true,
        "uuid": "obaAssessmentPanelUUID",
        "visibility": false,
        "disabled": false,
        "hooks": [],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "disabled",
            "uuid": "assesmentDisabledUUID",
            "disabledClass": "disabledFalse"
          },
          {
            "ctype": "title",
            "uuid": "customerComplaintHeaderUUID",
            "titleClass": "sidenav-title body2",
            "title": "Customer Complaint",
            "titleValue": ""
          },
          {
            "ctype": "showMore",
            "uuid": "customerComplaintTitleUUID",
            "titleClass": "sidenav-title body2",
            "text": "#getInitialDetailsAssessment.customerComplaints",
            "isShown": true
          },
          {
            "ctype": "title",
            "uuid": "failCodeUUID",
            "titleClass": "sidenav-title body2 os-field",
            "title": "Fail Code:",
            "titleValue": "#getInitialDetailsAssessment.failCode"
          },
          {
            "ctype": "title",
            "uuid": "osReinstallUUID",
            "titleClass": "sidenav-title body2",
            "title": "OS reinstall allowed:",
            "titleValue": "#getInitialDetailsAssessment.osReinstallAllowed"
          },
          {
            "ctype": "title",
            "uuid": "bsodFieldUUID",
            "titleClass": "sidenav-title body2",
            "title": "BSOD Problem:",
            "titleValue": "#getInitialDetailsAssessment.bsod"
          },
          {
            "ctype": "title",
            "uuid": "winPasswordUUID",
            "titleClass": "sidenav-title body2",
            "title": "Windows password:",
            "titleValue": "#getInitialDetailsAssessment.windowsPassword"
          },
          {
            "ctype": "title",
            "uuid": "biosVersionTitleUUID",
            "titleClass": "sidenav-title body2",
            "title": "Expected Bios Version:",
            "titleValue": "#getBiosAlertDetailsAssessment.0.bios"
          },
          {
            "ctype": "title",
            "uuid": "osLanguageUUID",
            "titleClass": "sidenav-title body2",
            "title": "OS Language:",
            "titleValue": "#getInitialDetailsAssessment.osLanguage"
          },
          {
            "ctype": "title",
            "uuid": "softwareVersionTitleUUID",
            "titleClass": "sidenav-title body2 os-field",
            "title": "OS Version:",
            "titleValue": "#getSoftwareAlertDetailsAssessment.0.software"
          },
          {
            "ctype": "checkbox",
            "name": "printLabelCheckbox",
            "uuid": "printLabelCheckboxUUID",
            "hooks": [],
            "validations": [],
            "required": false,
            "submittable": true,
            "disabled": false,
            "label": "Print Label",
            "labelPosition": "after",
            "labelClass": "ram-label",
            "code": "value",
            "checked": false,
            "displayValue": "value",
            "css": "margin-top:-20px",
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "printLabelSelection",
                  "data": "elementControlValue"
                },
                "eventSource": "click"
              }
            ]
          }
        ],
        "footer": [
          {
            "ctype": "button",
            "color": "primary",
            "text": "Complete",
            "uuid": "obaAssessmentSubmittedUUID",
            "name": "obaAssessmentButtonSubmit",
            "visibility": true,
            "disabled": false,
            "submittable": true,
            "isDisableNotReq": true,
            "type": "submit",
            "tooltip": "Complete Initial Assessment",
            "class": "primary-btn",
            "hooks": [],
            "validations": [],
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "initialAssessmentFormData",
                  "data": "formData"
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "obaAssessmentPanelUUID",
                  "properties": {
                    "expanded": false,
                    "disabled": false,
                    "header": {
                      "title": "Initial Assessment",
                      "icon": "description",
                      "statusIcon": "check_circle",
                      "statusClass": "complete-status",
                      "class": "complete-task",
                      "iconClass": "complete-task"
                    }
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "obaAssessmentSubmittedUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "condition",
                "config": {
                  "operation": "isValid",
                  "lhs": "#printLabelSelection"
                },
                "eventSource": "click",
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "context",
                        "config": {
                          "requestMethod": "delete",
                          "key": "printLabelUUID"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "printLabelUUID",
                          "properties": {
                            "expanded": true,
                            "disabled": false,
                            "hidden": false,
                            "header": {
                              "title": "Print Label",
                              "icon": "description",
                              "statusIcon": "hourglass_empty",
                              "statusClass": "incomplete-status",
                              "iconClass": "active-header"
                            }
                          }
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "enableComponent",
                        "config": {
                          "key": "printlabelButtonUUID",
                          "property": "printlabelButtonName"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "context",
                        "config": {
                          "requestMethod": "add",
                          "key": "printLabelSelectionValue",
                          "data": "YES"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "disableComponent",
                        "config": {
                          "key": "quickRestoreResultCodesUUID",
                          "property": "ResultCodes"
                        },
                        "eventSource": "click"
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": [
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "printLabelUUID",
                          "properties": {
                            "expanded": false,
                            "disabled": true,
                            "hidden": true
                          }
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "context",
                        "config": {
                          "requestMethod": "add",
                          "key": "printLabelSelectionValue",
                          "data": "NO"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "enableComponent",
                        "config": {
                          "key": "quickRestoreResultCodesUUID",
                          "property": "ResultCodes"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "reasonCodeTaskPanelUUID0",
                          "properties": {
                            "expanded": true,
                            "disabled": false
                          }
                        },
                        "eventSource": "click"
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      {
        "ctype": "taskPanel",
        "uuid": "printLabelUUID",
        "containerId": "prebodysectionone",
        "title": "",
        "header": {
          "title": "Print Label",
          "icon": "description",
          "statusIcon": "hourglass_empty",
          "statusClass": "incomplete-status"
        },
        "expanded": false,
        "hideToggle": true,
        "disabled": true,
        "hidden": true,
        "collapsedHeight": "40px",
        "expandedHeight": "40px",
        "bodyclass": "splitView",
        "panelClass": "overflow-show",
        "visibility": false,
        "hooks": [],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "disabled",
            "uuid": "printDisableUUID",
            "disabledClass": "disabledFalse"
          },
          {
            "ctype": "textField",
            "uuid": "productNrUUID",
            "submitable": false,
            "disabled": false,
            "visibility": true,
            "validations": [
              {
                "type": "regex",
                "script": "^[a-zA-Z0-9#]{1,12}"
              }
            ],
            "formGroupClass": "textFields-FlexMode",
            "textfieldClass": "textFields-FlexMode",
            "labelClass": "printLabelClass",
            "hooks": [],
            "actions": [],
            "name": "productValue",
            "label": "Product Nr",
            "labelPosition": "",
            "tooltip": "",
            "TooltipPosition": "",
            "defaultValue": "#discrepancyUnitInfo.PART_NO",
            "readonly": false,
            "type": "text",
            "required": true,
            "placeholder": "Scan#",
            "prefix": false,
            "prefixIcon": "",
            "suffix": false,
            "suffixIcon": ""
          },
          {
            "ctype": "textField",
            "uuid": "serialNrUUID",
            "submitable": false,
            "disabled": false,
            "visibility": true,
            "validations": [
              {
                "type": "regex",
                "script": "^[a-zA-Z0-9]{1,12}"
              }
            ],
            "formGroupClass": "textFields-FlexMode",
            "labelClass": "printLabelClass",
            "hooks": [],
            "actions": [],
            "name": "serialValue",
            "label": "Serial Nr",
            "labelPosition": "",
            "tooltip": "",
            "TooltipPosition": "",
            "defaultValue": "#discrepancyUnitInfo.SERIAL_NO",
            "readonly": false,
            "type": "text",
            "required": true,
            "placeholder": "Scan#",
            "prefix": false,
            "prefixIcon": "",
            "suffix": false,
            "suffixIcon": ""
          },
          {
            "ctype": "textField",
            "uuid": "modelNrUUID",
            "submitable": false,
            "disabled": false,
            "visibility": true,
            "validations": [
              {
                "type": "regex",
                "script": "(?=^.{5,250}$)^[a-zA-Z0-9][a-zA-Z0-9-#,.\/ ]*[a-zA-Z0-9-#,.\/]$"
              }
            ],
            "labelClass": "printLabelClass",
            "formGroupClass": "textFields-FlexMode",
            "textfieldClass": "rightside-search",
            "hooks": [],
            "actions": [],
            "name": "modelNr",
            "label": "Model Nr",
            "labelPosition": "",
            "tooltip": "",
            "TooltipPosition": "",
            "defaultValue": "#modelValueText",
            "readonly": false,
            "type": "text",
            "required": true,
            "placeholder": "Scan#",
            "prefix": false,
            "prefixIcon": "",
            "suffix": false,
            "suffixIcon": ""
          }
        ],
        "footer": [
          {
            "ctype": "button",
            "color": "primary",
            "text": "Complete",
            "class": "primary-btn",
            "uuid": "printlabelButtonUUID",
            "parentuuid": "replaceTaskUUID",
            "visibility": true,
            "name": "printlabelButtonName",
            "disabled": true,
            "type": "submit",
            "tooltip": "",
            "hooks": [],
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "printlabelFormData",
                  "data": "formData"
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "printlabelButtonUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "printLabelUUID",
                  "properties": {
                    "expanded": false,
                    "disabled": false,
                    "hidden": false,
                    "header": {
                      "title": "Print Label",
                      "icon": "description",
                      "statusIcon": "check_circle",
                      "statusClass": "complete-status",
                      "class": "complete-task",
                      "iconClass": "complete-task"
                    }
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "isPrintLabelCompleted",
                  "data": "Yes"
                },
                "eventSource": "click"
              },
              {
                "type": "enableComponent",
                "config": {
                  "key": "quickRestoreResultCodesUUID",
                  "property": "ResultCodes"
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "reasonCodeTaskPanelUUID0",
                  "properties": {
                    "expanded": true,
                    "disabled": false
                  }
                },
                "eventSource": "click"
              }
            ],
            "validations": []
          }
        ]
      },
      {
        "ctype": "dynamicTaskRender",
        "uuid": "dynamicTaskUUID",
        "containerId": "prebodysectionone",
        "config": {
          "ctype": "taskPanel",
          "columnWiseTitle": true,
          "filterValue": [
            33,
            35,
            36,
            37
          ],
          "header": {
            "title": "OS Reinstall",
            "svgIcon": "software",
            "css": "color:black"
          },
          "headerTitleLabels": [
            "",
            "",
            "Reason",
            ""
          ],
          "headerTitleValues": [
            "#_ASSEMBLY_CODE_DESC",
            "",
            "#_DEFECT_CODE_DESC",
            "Software"
          ],
          "inputClasses": [
            "parent1",
            "parent2"
          ],
          "headerClasses": [
            ""
          ],
          "expanded": false,
          "isBasedOnResultCode": true,
          "visibility": false,
          "hideToggle": true,
          "uuid": "reasonCodeTaskPanelUUID#@",
          "hidden": false,
          "disabled": false,
          "hooks": [
            {
              "type": "updateComponent",
              "config": {
                "key": "reasonCodeTaskPanelUUID#@",
                "properties": {
                  "expanded": false
                }
              },
              "hookType": "afterInit"
            },
            {
              "type": "updateComponent",
              "config": {
                "key": "assessmentSubmittedUUID#@",
                "properties": {
                  "disabled": true
                }
              },
              "hookType": "afterInit"
            },
            {
              "type": "condition",
              "config": {
                "operation": "isValid",
                "lhs": "#reasonCodeDeafultValue"
              },
              "hookType": "afterInit",
              "responseDependents": {
                "onSuccess": {
                  "actions": [
                    {
                      "type": "updateComponent",
                      "config": {
                        "key": "ReasonCode1UUID#@",
                        "fieldProperties": {
                          "reasonCode#@": "#reasonCodeDeafultValue"
                        }
                      }
                    },
                    {
                      "type": "updateComponent",
                      "config": {
                        "key": "reasonCodeTaskPanelUUID#@",
                        "properties": {
                          "expanded": false,
                          "header": {
                            "svgIcon": "description",
                            "statusIcon": "check_circle",
                            "statusClass": "complete-status",
                            "class": "complete-task",
                            "iconClass": "complete-task",
                            "headerclass": "replaceheaderclass"
                          }
                        }
                      }
                    }
                  ]
                },
                "onFailure": {
                  "actions": []
                }
              }
            }
          ],
          "validations": [],
          "actions": [],
          "items": [
            {
              "ctype": "disabled",
              "uuid": "qrPartTaskUUID#@",
              "disabledClass": "disabledFalse"
            },
            {
              "ctype": "nativeDropdown",
              "dropdownClass": "footer-dropdown body2",
              "uuid": "ReasonCode1UUID#@",
              "name": "reasonCode#@",
              "label": "Reason Code",
              "required": true,
              "dataSource": "#getFFValue",
              "code": "value",
              "displayValue": "value",
              "inputStyles": "margin-left: 25px;float: center;width: 20% ;border-bottom-left-radius:4px;border-bottom-right-radius:4px;border-top-right-radius:4px;border-top-left-radius:4px;border:1px solid rgba(0, 0, 0, .9);padding:9px 13px 9px 15px",
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "userSelectedSoftwareReason",
                    "data": "elementControlValue"
                  },
                  "eventSource": "change"
                }
              ]
            }
          ],
          "footer": [
            {
              "ctype": "button",
              "color": "primary",
              "isDisableNotReq": true,
              "text": "Complete",
              "uuid": "assessmentSubmittedUUID#@",
              "visibility": true,
              "enableIfDirty": true,
              "disabled": true,
              "type": "submit",
              "class": "primary-btn",
              "hooks": [],
              "validations": [],
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "quickRestoreTaskPanelData#@",
                    "data": "formData"
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "reasonCodeTaskPanelUUID#@1",
                    "properties": {
                      "expanded": true,
                      "disabled": false
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "reasonCodeTaskPanelUUID#@0",
                    "properties": {
                      "expanded": false,
                      "disabled": false,
                      "header": {
                        "title": "OS Reinstall",
                        "svgIcon": "software",
                        "css": "color:black",
                        "statusIcon": "check_circle",
                        "statusClass": "complete-status",
                        "class": "complete-task",
                        "iconClass": "complete-task"
                      }
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "assessmentSubmittedUUID#@",
                    "properties": {
                      "disabled": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "condition",
                  "config": {
                    "operation": "isEqualTo",
                    "lhs": "#@1",
                    "rhs": "#dynamicTaskPanellength"
                  },
                  "eventSource": "click",
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "condition",
                          "eventSource": "click",
                          "config": {
                            "operation": "isEqualTo",
                            "lhs": "#vftStatusFlag",
                            "rhs": "Invalid"
                          },
                          "responseDependents": {
                            "onSuccess": {
                              "actions": [
                                {
                                  "type": "updateComponent",
                                  "config": {
                                    "key": "vftTaskUUID",
                                    "properties": {
                                      "expanded": true,
                                      "disabled": false
                                    }
                                  },
                                  "eventSource": "click"
                                }
                              ]
                            },
                            "onFailure": {
                              "actions": [
                                {
                                  "type": "updateComponent",
                                  "config": {
                                    "key": "vftTaskUUID",
                                    "properties": {
                                      "expanded": false,
                                      "disabled": true
                                    }
                                  },
                                  "eventSource": "click"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": []
                    }
                  }
                }
              ]
            }
          ]
        },
        "data": "#getHPFAHistoryResp",
        "firstTaskExpand": false
      },
      {
        "ctype": "toolbar",
        "toolbarClass": "creatorTask-Toolbar",
        "hoverClass": "background-white",
        "items": [
          {
            "ctype": "iconText",
            "hoverClass": "blue-icon",
            "svgIcon": "software",
            "text": "Software",
            "iconTextClass": "creatorTask-Icontext",
            "uuid": "softwareIconUUID",
            "textClass": "heading3-regular greyish-black",
            "iconPosition": "top",
            "actions": [
              {
                "type": "updateComponent",
                "eventSource": "click",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "",
                    "isShown": false
                  }
                }
              },
              {
                "type": "context",
                "eventSource": "click",
                "config": {
                  "requestMethod": "add",
                  "key": "currentTaskUUID",
                  "data": ""
                }
              },
              {
                "type": "condition",
                "config": {
                  "operation": "isEqualTo",
                  "lhs": "#currentTaskUUID",
                  "rhs": "softwareTaskUUID"
                },
                "eventSource": "click",
                "responseDependents": {
                  "onSuccess": {
                    "actions": []
                  },
                  "onFailure": {
                    "actions": [
                      {
                        "type": "deleteComponent",
                        "eventSource": "click",
                        "config": {
                          "key": "#currentTaskUUID"
                        }
                      },
                      {
                        "type": "context",
                        "eventSource": "click",
                        "config": {
                          "requestMethod": "add",
                          "key": "currentTaskUUID",
                          "data": "softwareTaskUUID"
                        }
                      },
                      {
                        "type": "createComponent",
                        "config": {
                          "targetId": "pageUUID",
                          "containerId": "prebodysectiontwo",
                          "data": {
                            "ctype": "taskPanel",
                            "splitView": true,
                            "title": "",
                            "header": {
                              "title": "Software",
                              "svgIcon": "software",
                              "css": "color:black",
                              "status": "",
                              "statusIcon": "close",
                              "statusClass": "header-icon"
                            },
                            "expanded": "true",
                            "hideToggle": "true",
                            "collapsedHeight": "40px",
                            "expandedHeight": "40px",
                            "bodyclass": "splitView",
                            "taskPanelHeaderClass": "task-panel-header-color-light-grey",
                            "panelClass": "overflow-show",
                            "leftDivclass": "width:50%",
                            "rightDivclass": "width:50%",
                            "uuid": "softwareTaskUUID",
                            "visibility": false,
                            "hooks": [],
                            "validations": [],
                            "actions": [
                              {
                                "type": "deleteComponent",
                                "eventSource": "click",
                                "config": {
                                  "key": "#currentTaskUUID"
                                }
                              },
                              {
                                "type": "context",
                                "eventSource": "click",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "currentTaskUUID",
                                  "data": ""
                                }
                              }
                            ],
                            "items": [
                              {
                                "ctype": "dropdownWithSearch",
                                "uuid": "softwareActionCodeUUID",
                                "hooks": [],
                                "submitable": true,
                                "visibility": true,
                                "required": true,
                                "label": "Action Code",
                                "labelPosition": "left",
                                "name": "ActionCode",
                                "formGroupClass": "flex-container-full-width form-group-margin",
                                "dropdownClass": "dropdown-container textfield-container",
                                "labelClass": "subtitle1 greyish-black",
                                "code": "id",
                                "displayValue": "actionCode",
                                "dataSource": "#getActionCodeSoftwareResp",
                                "actions": [
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareAction",
                                      "data": "elementControlValue"
                                    },
                                    "eventSource": "change"
                                  },
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareActionName",
                                      "data": "elementControlName"
                                    },
                                    "eventSource": "change"
                                  },
                                  {
                                    "type": "microservice",
                                    "eventSource": "change",
                                    "config": {
                                      "microserviceId": "getValuesforFaff",
                                      "isLocal": false,
                                      "LocalService": "assets/Responses/getQRStatus.json",
                                      "requestMethod": "get",
                                      "params": {
                                        "faffId": "#getReferenceDataKeys.QrActionFaffId",
                                        "userName": "#userAccountInfo.PersonalDetails.USERID"
                                      }
                                    },
                                    "responseDependents": {
                                      "onSuccess": {
                                        "actions": [
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "getFAFFValuesSoftwareResp",
                                              "data": "responseData"
                                            },
                                            "eventSource": "change"
                                          },
                                          {
                                            "type": "updateTaskPanelRightSide",
                                            "config": {
                                              "key": "softwareTaskUUID",
                                              "properties": {
                                                "rightItems": [
                                                  {
                                                    "ctype": "nativeDropdown",
                                                    "containerId": "expansionPanelContentFirstHalf",
                                                    "uuid": "softwareFaultIdentifiedBy",
                                                    "hooks": [],
                                                    "submitable": true,
                                                    "visibility": true,
                                                    "required": true,
                                                    "label": "Fault Identified By",
                                                    "labelPosition": "left",
                                                    "name": "FaultIdentifiedBy",
                                                    "formGroupClass": "flex-container-full-width form-group-margin",
                                                    "dropdownClass": "dropdown-container textfield-container-50",
                                                    "labelClass": "subtitle1 greyish-black",
                                                    "dataSource": "#getFAFFValuesSoftwareResp",
                                                    "actions": [
                                                      {
                                                        "type": "context",
                                                        "config": {
                                                          "requestMethod": "add",
                                                          "key": "userSelectedSoftwareFaultIdentifiedBy",
                                                          "data": "elementControlValue"
                                                        },
                                                        "eventSource": "change"
                                                      },
                                                      {
                                                        "type": "context",
                                                        "config": {
                                                          "requestMethod": "add",
                                                          "key": "userSelectedSoftwareFaultIdentifiedByName",
                                                          "data": "Part rep. reason"
                                                        },
                                                        "eventSource": "change"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "eventSource": "change"
                                          }
                                        ]
                                      },
                                      "onFailure": {
                                        "actions": [
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "errorResp",
                                              "data": "responseData"
                                            }
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "errorTitleUUID",
                                              "properties": {
                                                "titleValue": "#errorResp",
                                                "isShown": true
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "ctype": "dropdownWithSearch",
                                "uuid": "softwareAssemblyUUID",
                                "hooks": [],
                                "submitable": true,
                                "visibility": true,
                                "required": true,
                                "label": "Assembly",
                                "labelPosition": "left",
                                "name": "Assembly",
                                "formGroupClass": "flex-container-full-width form-group-margin",
                                "dropdownClass": "dropdown-container textfield-container",
                                "labelClass": "subtitle1 greyish-black",
                                "code": "assemblyCodeValue",
                                "displayValue": "assemblyCodeValue",
                                "dataSource": "#getCommoditySoftware",
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "eventSource": "change",
                                    "config": {
                                      "key": "errorTitleUUID",
                                      "properties": {
                                        "titleValue": "",
                                        "isShown": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareAssembly",
                                      "data": "elementControlValue"
                                    },
                                    "eventSource": "change"
                                  },
                                  {
                                    "type": "microservice",
                                    "eventSource": "change",
                                    "config": {
                                      "microserviceId": "getDefectByActionAndCommodity",
                                      "requestMethod": "get",
                                      "params": {
                                        "locationId": "#repairUnitInfo.LOCATION_ID",
                                        "clientId": "#repairUnitInfo.CLIENT_ID",
                                        "contractId": "#repairUnitInfo.CONTRACT_ID",
                                        "route": "#repairUnitInfo.ROUTE",
                                        "workcenterId": "#repairUnitInfo.WORKCENTER_ID",
                                        "actionCode": "#userSelectedSoftwareAction",
                                        "commodityName": "#userSelectedSoftwareAssembly",
                                        "userName": "#userAccountInfo.PersonalDetails.USERID"
                                      }
                                    },
                                    "responseDependents": {
                                      "onSuccess": {
                                        "actions": [
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "getDefectByActionAndCommodityResp",
                                              "data": "responseData"
                                            }
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "softwareDefectUUID",
                                              "dropDownProperties": {
                                                "options": "#getDefectByActionAndCommodityResp"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "onFailure": {
                                        "actions": [
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "errorResp",
                                              "data": "responseData"
                                            }
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "errorTitleUUID",
                                              "properties": {
                                                "titleValue": "#errorResp",
                                                "isShown": true
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "ctype": "dropdownWithSearch",
                                "uuid": "softwareReasonUUID",
                                "hooks": [],
                                "submitable": true,
                                "visibility": true,
                                "required": true,
                                "label": "Reason",
                                "labelPosition": "left",
                                "name": "Reason",
                                "formGroupClass": "flex-container-full-width form-group-margin",
                                "dropdownClass": "dropdown-container textfield-container",
                                "labelClass": "subtitle1 greyish-black",
                                "code": "value",
                                "displayValue": "value",
                                "dataSource": "#getFFValue",
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "eventSource": "change",
                                    "config": {
                                      "key": "errorTitleUUID",
                                      "properties": {
                                        "titleValue": "",
                                        "isShown": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareReason",
                                      "data": "elementControlValue"
                                    },
                                    "eventSource": "change"
                                  }
                                ]
                              },
                              {
                                "ctype": "dropdownWithSearch",
                                "uuid": "softwareDefectUUID",
                                "hooks": [],
                                "submitable": true,
                                "visibility": true,
                                "required": true,
                                "label": "Defect",
                                "labelPosition": "left",
                                "name": "softwareDefect",
                                "formGroupClass": "flex-container-full-width form-group-margin",
                                "dropdownClass": "dropdown-container textfield-container",
                                "labelClass": "subtitle1 greyish-black",
                                "code": "name",
                                "displayValue": "defectCode",
                                "actions": [
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareDefect",
                                      "data": "elementControlValue"
                                    },
                                    "eventSource": "change"
                                  },
                                  {
                                    "type": "context",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "userSelectedSoftwareDefectName",
                                      "data": "elementControlName"
                                    },
                                    "eventSource": "change"
                                  }
                                ]
                              }
                            ],
                            "footer": [
                              {
                                "ctype": "iconbutton",
                                "text": "Reset Form",
                                "uuid": "RemoveresetUUID",
                                "visibility": true,
                                "disabled": false,
                                "type": "submit",
                                "hooks": [],
                                "validations": [],
                                "icon": "not_interested",
                                "iconClass": "resetIcon",
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "eventSource": "click",
                                    "config": {
                                      "key": "errorTitleUUID",
                                      "properties": {
                                        "titleValue": "",
                                        "isShown": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "updateComponent",
                                    "eventSource": "click",
                                    "config": {
                                      "key": "softwareDefectUUID",
                                      "properties": {
                                        "options": []
                                      }
                                    }
                                  },
                                  {
                                    "type": "resetData",
                                    "eventSource": "click"
                                  }
                                ]
                              },
                              {
                                "ctype": "button",
                                "color": "primary",
                                "text": "Complete",
                                "uuid": "softwareCompleteUUID",
                                "parentuuid": "softwareTaskUUID",
                                "visibility": true,
                                "disabled": true,
                                "type": "submit",
                                "tooltip": "",
                                "hooks": [],
                                "validations": [],
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "eventSource": "click",
                                    "config": {
                                      "key": "errorTitleUUID",
                                      "properties": {
                                        "titleValue": "",
                                        "isShown": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "context",
                                    "eventSource": "click",
                                    "config": {
                                      "requestMethod": "add",
                                      "key": "reasonCodeDeafultValue",
                                      "data": "#userSelectedSoftwareReason"
                                    }
                                  },
                                  {
                                    "type": "microservice",
                                    "eventSource": "click",
                                    "config": {
                                      "microserviceId": "performFA",
                                      "requestMethod": "post",
                                      "isLocal": false,
                                      "LocalService": "assets/Responses/performFA.json",
                                      "body": {
                                        "updateFailureAnalysisRequest": {
                                          "bcn": "#repairUnitInfo.ITEM_BCN",
                                          "actionCodeChangeList": {
                                            "actionCodeChange": [
                                              {
                                                "assemblyCode": {
                                                  "value": "#userSelectedSoftwareAssembly"
                                                },
                                                "defectCode": {
                                                  "value": "#userSelectedSoftwareDefect"
                                                },
                                                "actionCode": "#userSelectedSoftwareAction",
                                                "operation": "Add",
                                                "flexFieldList": {
                                                  "flexField": [
                                                    {
                                                      "name": "#userSelectedSoftwareFaultIdentifiedByName",
                                                      "value": "#userSelectedSoftwareFaultIdentifiedBy"
                                                    },
                                                    {
                                                      "name": "Part rep. Type",
                                                      "value": "IW"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "assemblyCodeChangeList": {
                                            "assemblyCodeChange": [
                                              {
                                                "assemblyCode": "#userSelectedSoftwareAssembly",
                                                "operation": "Add"
                                              }
                                            ]
                                          },
                                          "defectCodeChangeList": {
                                            "defectCodeChange": [
                                              {
                                                "defectCode": "#userSelectedSoftwareDefect",
                                                "operation": "Add"
                                              }
                                            ]
                                          }
                                        },
                                        "userPwd": {
                                          "password": "#loginUUID.password",
                                          "username": "#userAccountInfo.PersonalDetails.USERID"
                                        },
                                        "operationTypes": "ProcessImmediate",
                                        "ip": "::1",
                                        "callSource": "FrontEnd",
                                        "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                        "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                      },
                                      "toBeStringified": true
                                    },
                                    "responseDependents": {
                                      "onSuccess": {
                                        "actions": [
                                          {
                                            "type": "microservice",
                                            "config": {
                                              "microserviceId": "getResultCodeByValidateResult",
                                              "requestMethod": "get",
                                              "params": {
                                                "bcn": "#repairUnitInfo.ITEM_BCN",
                                                "validateResult": 0
                                              }
                                            },
                                            "responseDependents": {
                                              "onSuccess": {
                                                "actions": [
                                                  {
                                                    "type": "context",
                                                    "config": {
                                                      "requestMethod": "add",
                                                      "key": "resultCodesForDiscrepancy",
                                                      "data": "responseData"
                                                    }
                                                  },
                                                  {
                                                    "type": "updateComponent",
                                                    "config": {
                                                      "key": "quickRestoreResultCodesUUID",
                                                      "dropDownProperties": {
                                                        "options": "#resultCodesForDiscrepancy"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "condition",
                                                    "config": {
                                                      "operation": "isValid",
                                                      "lhs": "#SelectedDescripencyResultcode"
                                                    },
                                                    "responseDependents": {
                                                      "onSuccess": {
                                                        "actions": [
                                                          {
                                                            "type": "condition",
                                                            "config": {
                                                              "operation": "isValid",
                                                              "lhs": "#resultCodesForDiscrepancy",
                                                              "lhsKeyName": "resultCode",
                                                              "lhsKeyValue": "#SelectedDescripencyResultcode",
                                                              "lhsSecondKeyName": "resultCode"
                                                            },
                                                            "responseDependents": {
                                                              "onSuccess": {
                                                                "actions": [
                                                                  {
                                                                    "type": "updateComponent",
                                                                    "config": {
                                                                      "key": "quickRestoreResultCodesUUID",
                                                                      "fieldProperties": {
                                                                        "ResultCodes": "#SelectedDescripencyResultcode"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "onFailure": {
                                                                "actions": [
                                                                  {
                                                                    "type": "updateComponent",
                                                                    "config": {
                                                                      "key": "quickRestoreResultCodesUUID",
                                                                      "properties": {
                                                                        "isReset": true,
                                                                        "name": "ResultCodes"
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "updateComponent",
                                                                    "config": {
                                                                      "key": "quickRestoreTimeoutUUID",
                                                                      "properties": {
                                                                        "disabled": true
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "context",
                                                                    "config": {
                                                                      "requestMethod": "add",
                                                                      "key": "SelectedDescripencyResultcode",
                                                                      "data": ""
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "onFailure": {
                                                        "actions": [
                                                          {
                                                            "type": "updateComponent",
                                                            "config": {
                                                              "key": "quickRestoreTimeoutUUID",
                                                              "properties": {
                                                                "disabled": true
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "resetData",
                                                            "config": {
                                                              "key": "quickRestoreResultCodesUUID"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "onFailure": {
                                                "actions": [
                                                  {
                                                    "type": "context",
                                                    "config": {
                                                      "requestMethod": "add",
                                                      "key": "errorDisp",
                                                      "data": "responseData"
                                                    }
                                                  },
                                                  {
                                                    "type": "updateComponent",
                                                    "config": {
                                                      "key": "errorTitleUUID",
                                                      "properties": {
                                                        "titleValue": "#errorDisp",
                                                        "isShown": true
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "deleteComponent",
                                            "eventSource": "click"
                                          },
                                          {
                                            "type": "createComponent",
                                            "config": {
                                              "targetId": "pageUUID",
                                              "containerId": "prebodysectionone",
                                              "data": {
                                                "ctype": "taskPanel",
                                                "uuid": "softwareProcessUUID",
                                                "isblueBorder": true,
                                                "uniqueUUID": true,
                                                "columnWiseTitle": true,
                                                "header": {
                                                  "svgIcon": "software",
                                                  "statusIcon": "check_circle",
                                                  "statusClass": "complete-status",
                                                  "class": "complete-task",
                                                  "iconClass": "complete-task"
                                                },
                                                "headerTitleLabels": [
                                                  "#userSelectedSoftwareAssembly",
                                                  "",
                                                  "Defect",
                                                  "Upload"
                                                ],
                                                "headerTitleValues": [
                                                  "#userSelectedSoftwareCommodityName",
                                                  "",
                                                  "#userSelectedSoftwareDefectName",
                                                  "software"
                                                ],
                                                "inputClasses": [
                                                  "parent1",
                                                  "parent2"
                                                ],
                                                "expanded": false,
                                                "hideToggle": true,
                                                "collapsedHeight": "40px",
                                                "expandedHeight": "40px",
                                                "bodyclass": "splitView",
                                                "taskpanelfooterclass": "d-flex justify-content-between",
                                                "leftDivclass": "width:50%",
                                                "rightDivclass": "width:50%",
                                                "visibility": false,
                                                "hooks": [],
                                                "validations": [],
                                                "actions": [],
                                                "items": [
                                                  {
                                                    "ctype": "title",
                                                    "titleValue": "",
                                                    "titleClass": "greyish-black body-italic"
                                                  }
                                                ],
                                                "footer": [
                                                  {
                                                    "ctype": "iconbutton",
                                                    "parentuuid": "#createdComponentUUID",
                                                    "text": "Delete",
                                                    "uuid": "softwareDeleteButtonUUID",
                                                    "visibility": true,
                                                    "disabled": false,
                                                    "type": "submit",
                                                    "hooks": [],
                                                    "validations": [],
                                                    "icon": "delete",
                                                    "iconButtonClass": "light-red",
                                                    "iconClass": "light-red",
                                                    "actions": [
                                                      {
                                                        "type": "GetValueFromArray",
                                                        "config": {
                                                          "arrayData": "#debugFlexFieldData",
                                                          "PullValue": "currentTaskPanelData",
                                                          "key": "parentUUID",
                                                          "property": "flexFields"
                                                        },
                                                        "eventSource": "click"
                                                      },
                                                      {
                                                        "type": "microservice",
                                                        "eventSource": "click",
                                                        "config": {
                                                          "microserviceId": "cancelFA",
                                                          "requestMethod": "post",
                                                          "isLocal": false,
                                                          "LocalService": "assets/Responses/performFA.json",
                                                          "body": {
                                                            "updateFailureAnalysisRequest": {
                                                              "bcn": "#repairUnitInfo.ITEM_BCN",
                                                              "actionCodeChangeList": {
                                                                "actionCodeChange": [
                                                                  {
                                                                    "assemblyCode": {
                                                                      "occurrence": 1,
                                                                      "value": "#currentTaskPanelData.userSelectedCommodityName"
                                                                    },
                                                                    "defectCode": {
                                                                      "occurrence": 1,
                                                                      "value": "#currentTaskPanelData.userSelectedDefect"
                                                                    },
                                                                    "actionCode": "#currentTaskPanelData.userSelectedAction",
                                                                    "operation": "Delete",
                                                                    "flexFieldList": {
                                                                      "flexField": [
                                                                        {
                                                                          "name": "#currentTaskPanelData.userSelectedFaultIdentifiedByName",
                                                                          "value": "#currentTaskPanelData.userSelectedFaultIdentifiedBy"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "userPwd": {
                                                              "password": "#loginUUID.password",
                                                              "username": "#userAccountInfo.PersonalDetails.USERID"
                                                            },
                                                            "operationTypes": "ProcessImmediate",
                                                            "ip": "::1",
                                                            "callSource": "FrontEnd",
                                                            "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                                            "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                                          },
                                                          "toBeStringified": true,
                                                          "spliceIfEmptyValueObject": [
                                                            {
                                                              "identifier": "flexField",
                                                              "valueField": "value",
                                                              "keyToBeRemoved": "flexFieldList"
                                                            }
                                                          ]
                                                        },
                                                        "responseDependents": {
                                                          "onSuccess": {
                                                            "actions": [
                                                              {
                                                                "type": "microservice",
                                                                "eventSource": "click",
                                                                "config": {
                                                                  "microserviceId": "cancelFA",
                                                                  "requestMethod": "post",
                                                                  "isLocal": false,
                                                                  "LocalService": "assets/Responses/performFA.json",
                                                                  "body": {
                                                                    "updateFailureAnalysisRequest": {
                                                                      "bcn": "#repairUnitInfo.ITEM_BCN",
                                                                      "assemblyCodeChangeList": {
                                                                        "assemblyCodeChange": [
                                                                          {
                                                                            "assemblyCode": "#currentTaskPanelData.userSelectedCommodityName",
                                                                            "operation": "Delete"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "defectCodeChangeList": {
                                                                        "defectCodeChange": [
                                                                          {
                                                                            "defectCode": "#currentTaskPanelData.userSelectedDefect",
                                                                            "operation": "Delete"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "userPwd": {
                                                                      "password": "#loginUUID.password",
                                                                      "username": "#userAccountInfo.PersonalDetails.USERID"
                                                                    },
                                                                    "operationTypes": "ProcessImmediate",
                                                                    "ip": "::1",
                                                                    "callSource": "FrontEnd",
                                                                    "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                                                    "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                                                  },
                                                                  "toBeStringified": true
                                                                },
                                                                "responseDependents": {
                                                                  "onSuccess": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "deleteComponent",
                                                                        "eventSource": "click"
                                                                      },
                                                                      {
                                                                        "type": "microservice",
                                                                        "config": {
                                                                          "microserviceId": "getResultCodeByValidateResult",
                                                                          "requestMethod": "get",
                                                                          "params": {
                                                                            "bcn": "#repairUnitInfo.ITEM_BCN",
                                                                            "validateResult": 0
                                                                          }
                                                                        },
                                                                        "responseDependents": {
                                                                          "onSuccess": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "add",
                                                                                  "key": "resultCodesForDiscrepancy",
                                                                                  "data": "responseData"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "updateComponent",
                                                                                "config": {
                                                                                  "key": "quickRestoreResultCodesUUID",
                                                                                  "dropDownProperties": {
                                                                                    "options": "#resultCodesForDiscrepancy"
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "condition",
                                                                                "config": {
                                                                                  "operation": "isValid",
                                                                                  "lhs": "#SelectedDescripencyResultcode"
                                                                                },
                                                                                "responseDependents": {
                                                                                  "onSuccess": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "condition",
                                                                                        "config": {
                                                                                          "operation": "isValid",
                                                                                          "lhs": "#resultCodesForDiscrepancy",
                                                                                          "lhsKeyName": "resultCode",
                                                                                          "lhsKeyValue": "#SelectedDescripencyResultcode",
                                                                                          "lhsSecondKeyName": "resultCode"
                                                                                        },
                                                                                        "responseDependents": {
                                                                                          "onSuccess": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "quickRestoreResultCodesUUID",
                                                                                                  "fieldProperties": {
                                                                                                    "ResultCodes": "#SelectedDescripencyResultcode"
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "onFailure": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "quickRestoreResultCodesUUID",
                                                                                                  "properties": {
                                                                                                    "isReset": true,
                                                                                                    "name": "ResultCodes"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "quickRestoreTimeoutUUID",
                                                                                                  "properties": {
                                                                                                    "disabled": true
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "add",
                                                                                                  "key": "SelectedDescripencyResultcode",
                                                                                                  "data": ""
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "onFailure": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "updateComponent",
                                                                                        "config": {
                                                                                          "key": "quickRestoreTimeoutUUID",
                                                                                          "properties": {
                                                                                            "disabled": true
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "resetData",
                                                                                        "config": {
                                                                                          "key": "quickRestoreResultCodesUUID"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "onFailure": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "add",
                                                                                  "key": "errorDisp",
                                                                                  "data": "responseData"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "updateComponent",
                                                                                "config": {
                                                                                  "key": "errorTitleUUID",
                                                                                  "properties": {
                                                                                    "titleValue": "#errorDisp",
                                                                                    "isShown": true
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "onFailure": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "context",
                                                                        "config": {
                                                                          "requestMethod": "add",
                                                                          "key": "performFAError",
                                                                          "data": "responseData"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "updateComponent",
                                                                        "config": {
                                                                          "key": "errorTitleUUID",
                                                                          "properties": {
                                                                            "titleValue": "#performFAError",
                                                                            "isShown": true
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "onFailure": {
                                                            "actions": [
                                                              {
                                                                "type": "context",
                                                                "config": {
                                                                  "requestMethod": "add",
                                                                  "key": "performFAError",
                                                                  "data": "responseData"
                                                                }
                                                              },
                                                              {
                                                                "type": "updateComponent",
                                                                "config": {
                                                                  "key": "errorTitleUUID",
                                                                  "properties": {
                                                                    "titleValue": "#performFAError",
                                                                    "isShown": true
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "eventSource": "click"
                                          },
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "addToExistingContext",
                                              "target": "debugFlexFieldData",
                                              "sourceData": {
                                                "parentUUID": "#createdComponentUUID",
                                                "flexFields": [
                                                  {
                                                    "userSelectedCommodityName": "#userSelectedSoftwareAssembly",
                                                    "userSelectedDefect": "#userSelectedSoftwareDefect",
                                                    "userSelectedAction": "#userSelectedSoftwareAction",
                                                    "userSelectedFaultIdentifiedBy": "#userSelectedSoftwareFaultIdentifiedBy",
                                                    "userSelectedFaultIdentifiedByName": "#userSelectedSoftwareFaultIdentifiedByName"
                                                  }
                                                ]
                                              }
                                            },
                                            "eventSource": "click"
                                          },
                                          {
                                            "type": "context",
                                            "eventSource": "click",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "currentTaskUUID",
                                              "data": ""
                                            }
                                          },
                                          {
                                            "type": "enableComponent",
                                            "config": {
                                              "key": "quickRestoreResultCodesUUID",
                                              "property": "ResultCodes"
                                            },
                                            "eventSource": "click"
                                          }
                                        ]
                                      },
                                      "onFailure": {
                                        "actions": [
                                          {
                                            "type": "context",
                                            "config": {
                                              "requestMethod": "add",
                                              "key": "performFAError",
                                              "data": "responseData"
                                            }
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "errorTitleUUID",
                                              "properties": {
                                                "titleValue": "#performFAError",
                                                "isShown": true
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "eventSource": "click"
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      },
      {
        "ctype": "taskPanel",
        "panelClass": "margin-top-10",
        "uuid": "vftTaskUUID",
        "header": {
          "title": "Valid Final Functional Test Check (required for VFT)",
          "class": "font-weight-700",
          "icon": "description",
          "iconClass": "active-header",
          "status": "Invalid",
          "headerStatusClass": "body light-red"
        },
        "expanded": false,
        "hideToggle": true,
        "isBasedOnResultCode": true,
        "visibility": false,
        "hooks": [],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "flexFields",
            "uuid": "listTitleUUID",
            "flexClass": "flex-display-space-between",
            "items": [
              {
                "ctype": "label",
                "text": "Test Type",
                "labelClass": "body-italic",
                "value": ""
              },
              {
                "ctype": "label",
                "text": "Result",
                "labelClass": "common-width body-italic",
                "value": ""
              },
              {
                "ctype": "label",
                "text": "",
                "labelClass": "body2",
                "value": ""
              }
            ]
          },
          {
            "ctype": "flexFields",
            "uuid": "octopusRowUUID",
            "flexClass": "flex-display-space-between",
            "items": [
              {
                "ctype": "label",
                "text": "Octopus",
                "labelClass": "common-width body",
                "value": ""
              },
              {
                "ctype": "label",
                "text": "Invalid",
                "uuid": "octopusStatusUUID",
                "parentUUID": "octopusRowUUID",
                "labelClass": "common-width body light-red",
                "value": ""
              },
              {
                "ctype": "passiveLink",
                "visibility": true,
                "uuid": "octopusRefreshUUID",
                "parentUUID": "octopusRowUUID",
                "name": "Refresh",
                "linkClass": "text-underline",
                "actions": [
                  {
                    "type": "microservice",
                    "eventSource": "click",
                    "config": {
                      "microserviceId": "hpcommtmooctopus",
                      "LocalService": "assets/Responses/performFA.json",
                      "isLocal": false,
                      "requestMethod": "post",
                      "body": {
                        "locationId": "#repairUnitInfo.LOCATION_ID",
                        "clientId": "#repairUnitInfo.CLIENT_ID",
                        "contractId": "#repairUnitInfo.CONTRACT_ID",
                        "serialnumber": "#repairUnitInfo.SERIAL_NO",
                        "workOrderId": "#repairUnitInfo.WORKORDER_ID",
                        "itemId": "#repairUnitInfo.ITEM_ID",
                        "triggerType": "TIMEOUT",
                        "username": "#userAccountInfo.PersonalDetails.USERID",
                        "resultCode": ""
                      },
                      "toBeStringified": true
                    },
                    "responseDependents": {
                      "onSuccess": {
                        "actions": [
                          {
                            "type": "context",
                            "config": {
                              "requestMethod": "add",
                              "key": "hpcommtmooctopusResp",
                              "data": "responseData"
                            }
                          },
                          {
                            "type": "updateComponent",
                            "config": {
                              "key": "octopusStatusUUID",
                              "updateParent": true,
                              "properties": {
                                "text": "Valid",
                                "labelClass": "common-width body saved-green"
                              }
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "updateComponent",
                            "config": {
                              "key": "octopusRefreshUUID",
                              "updateParent": true,
                              "properties": {
                                "linkClass": "icon-disabled"
                              }
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "updateComponent",
                            "config": {
                              "key": "DSNStatusUUID",
                              "updateParent": true,
                              "properties": {
                                "text": "Valid",
                                "labelClass": "common-width body saved-green"
                              }
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "condition",
                            "config": {
                              "operation": "isContains",
                              "lhs": "#hpcommtmooctopusResp",
                              "rhs": "OCTOPUS result not found"
                            },
                            "responseDependents": {
                              "onSuccess": {
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "config": {
                                      "key": "octopusStatusUUID",
                                      "updateParent": true,
                                      "properties": {
                                        "text": "Invalid",
                                        "labelClass": "common-width body light-red"
                                      }
                                    },
                                    "eventSource": "click"
                                  }
                                ]
                              },
                              "onFailure": {
                                "actions": []
                              }
                            }
                          },
                          {
                            "type": "condition",
                            "config": {
                              "operation": "isContains",
                              "lhs": "#hpcommtmooctopusResp",
                              "rhs": "DSN result not found"
                            },
                            "responseDependents": {
                              "onSuccess": {
                                "actions": [
                                  {
                                    "type": "updateComponent",
                                    "config": {
                                      "key": "DSNStatusUUID",
                                      "updateParent": true,
                                      "properties": {
                                        "text": "Invalid",
                                        "labelClass": "common-width body light-red"
                                      }
                                    },
                                    "eventSource": "click"
                                  }
                                ]
                              },
                              "onFailure": {
                                "actions": []
                              }
                            }
                          },
                          {
                            "type": "updateComponent",
                            "config": {
                              "key": "vftTaskUUID",
                              "properties": {
                                "expanded": false,
                                "disabled": true,
                                "header": {
                                  "title": "Valid Final Functional Test Check (required for VFT)",
                                  "svgIcon": "calender",
                                  "iconClass": "active-header",
                                  "status": "Valid",
                                  "headerStatusClass": "body saved-green"
                                }
                              }
                            },
                            "eventSource": "click"
                          }
                        ]
                      },
                      "onFailure": {
                        "actions": [
                          {
                            "type": "context",
                            "config": {
                              "requestMethod": "add",
                              "key": "hpcommtmooctopusRespError",
                              "data": "responseData"
                            }
                          },
                          {
                            "type": "condition",
                            "config": {
                              "operation": "isContains",
                              "lhs": "#hpcommtmooctopusRespError",
                              "rhs": "OCTOPUS test FAILED"
                            },
                            "responseDependents": {
                              "onSuccess": {
                                "actions": [
                                  {
                                    "type": "condition",
                                    "config": {
                                      "operation": "isContains",
                                      "lhs": "#hpcommtmooctopusRespError",
                                      "rhs": "DSN test PASSED"
                                    },
                                    "responseDependents": {
                                      "onSuccess": {
                                        "actions": [
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "DSNStatusUUID",
                                              "updateParent": true,
                                              "properties": {
                                                "text": "Valid",
                                                "labelClass": "common-width body saved-green"
                                              }
                                            },
                                            "eventSource": "click"
                                          }
                                        ]
                                      },
                                      "onFailure": {
                                        "actions": [
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "octopusStatusUUID",
                                              "updateParent": true,
                                              "properties": {
                                                "text": "Invalid",
                                                "labelClass": "common-width body light-red"
                                              }
                                            },
                                            "eventSource": "click"
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "DSNStatusUUID",
                                              "updateParent": true,
                                              "properties": {
                                                "text": "Invalid",
                                                "labelClass": "common-width body light-red"
                                              }
                                            },
                                            "eventSource": "click"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "onFailure": {
                                "actions": [
                                  {
                                    "type": "condition",
                                    "config": {
                                      "operation": "isContains",
                                      "lhs": "#hpcommtmooctopusRespError",
                                      "rhs": "DSN test FAILED"
                                    },
                                    "responseDependents": {
                                      "onSuccess": {
                                        "actions": [
                                          {
                                            "type": "condition",
                                            "config": {
                                              "operation": "isContains",
                                              "lhs": "#hpcommtmooctopusRespError",
                                              "rhs": "OCTOPUS test PASSED"
                                            },
                                            "responseDependents": {
                                              "onSuccess": {
                                                "actions": [
                                                  {
                                                    "type": "updateComponent",
                                                    "config": {
                                                      "key": "octopusStatusUUID",
                                                      "updateParent": true,
                                                      "properties": {
                                                        "text": "Valid",
                                                        "labelClass": "common-width body saved-green"
                                                      }
                                                    },
                                                    "eventSource": "click"
                                                  }
                                                ]
                                              },
                                              "onFailure": {
                                                "actions": [
                                                  {
                                                    "type": "updateComponent",
                                                    "config": {
                                                      "key": "octopusStatusUUID",
                                                      "updateParent": true,
                                                      "properties": {
                                                        "text": "Invalid",
                                                        "labelClass": "common-width body light-red"
                                                      }
                                                    },
                                                    "eventSource": "click"
                                                  },
                                                  {
                                                    "type": "updateComponent",
                                                    "config": {
                                                      "key": "DSNStatusUUID",
                                                      "updateParent": true,
                                                      "properties": {
                                                        "text": "Invalid",
                                                        "labelClass": "common-width body light-red"
                                                      }
                                                    },
                                                    "eventSource": "click"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "onFailure": {
                                        "actions": [
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "octopusStatusUUID",
                                              "updateParent": true,
                                              "properties": {
                                                "text": "Invalid",
                                                "labelClass": "common-width body light-red"
                                              }
                                            },
                                            "eventSource": "click"
                                          },
                                          {
                                            "type": "updateComponent",
                                            "config": {
                                              "key": "DSNStatusUUID",
                                              "updateParent": true,
                                              "properties": {
                                                "text": "Invalid",
                                                "labelClass": "common-width body light-red"
                                              }
                                            },
                                            "eventSource": "click"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            ]
          },
          {
            "ctype": "flexFields",
            "uuid": "dsnRowUUID",
            "flexClass": "flex-display-space-between",
            "items": [
              {
                "ctype": "label",
                "text": "DSN",
                "labelClass": "common-width body",
                "value": ""
              },
              {
                "ctype": "label",
                "text": "Invalid",
                "uuid": "DSNStatusUUID",
                "parentUUID": "dsnRowUUID",
                "labelClass": "common-width body light-red",
                "value": ""
              },
              {
                "ctype": "passiveLink",
                "uuid": "refreshDSNUUID",
                "visibility": false,
                "name": "Refresh",
                "linkClass": "text-underline",
                "actions": []
              }
            ]
          }
        ],
        "footer": []
      },
      {
        "ctype": "taskPanel",
        "title": "",
        "header": {
          "title": "Confirm Accessories (required for VFT)",
          "class": "font-weight-700",
          "icon": "description",
          "iconClass": "active-header"
        },
        "expanded": false,
        "disabled": false,
        "hideToggle": true,
        "isBasedOnResultCode": true,
        "panelClass": "margin-top-10",
        "hidden": true,
        "uuid": "confirmAccessoriesUUID",
        "hooks": [],
        "validations": [],
        "actions": [],
        "items": [
          {
            "ctype": "compoList",
            "uuid": "confirmAccessoriesListUUID",
            "flexCount": 0,
            "dataGrid": [
              {
                "ctype": "textField",
                "readonly": false,
                "uuid": "newNoUUID",
                "hooks": [],
                "validations": [],
                "type": "text",
                "placeholder": "Scan #",
                "recursiveItemDisabled": true,
                "isAccessoryFlexFiled": true,
                "hidden": false,
                "formGroupClass": "content-container display-inline",
                "textfieldClass": "body2",
                "name": "partNumber",
                "value": "revisionLeveloutbound",
                "label": "",
                "rightLabel": "",
                "rightLabelClass": "body2 relative-margin25px bold-font",
                "bindLabel": true,
                "labelKey": "revisionLevelInbound",
                "actions": []
              },
              {
                "ctype": "iconText",
                "icon": "",
                "text": "Missing Accessory ?",
                "textCss": "",
                "iconPosition": "Before",
                "iconTextClass": "body missing-accessory",
                "uuid": "missingAccessoryUUID",
                "isAccessoryFlexFiled": true,
                "inLine": true,
                "name": "Missing Accessory ?",
                "hidden": false,
                "actions": [
                  {
                    "type": "populateEmailSubject",
                    "config": {
                      "key": "confirmAccessoriesFlexFieldsData",
                      "properties": {}
                    },
                    "eventSource": "click"
                  },
                  {
                    "type": "populateMissingAccessoriesNamesInTextFields",
                    "config": {
                      "key": "populateMissingAccessoriesNamesInTextFields",
                      "properties": {}
                    },
                    "eventSource": "click"
                  },
                  {
                    "type": "dialog",
                    "uuid": "missingAccessoryEmailDialogUUID",
                    "config": {
                      "title": "Opisz w skrócie, na czym polega problem",
                      "items": [
                        {
                          "ctype": "textField",
                          "readonly": false,
                          "uuid": "emailToAddressUUID",
                          "hooks": [],
                          "validations": [],
                          "type": "text",
                          "placeholder": "Email To",
                          "recursiveItemDisabled": true,
                          "formGroupClass": "content-container display-inline",
                          "textfieldClass": "body2 width-85",
                          "name": "emailToAddress",
                          "defaultValue": "radoslaw.andrzejewski@ivytech.com, tomasz.konczol@ivytech.com, hanna.kowalewska@ivytech.com",
                          "value": "emailToAddressValue",
                          "label": "Send to",
                          "labelClass": "label-fault",
                          "bindLabel": true,
                          "required": true,
                          "labelKey": "revisionLevelInbound",
                          "actions": []
                        },
                        {
                          "ctype": "textField",
                          "readonly": false,
                          "targetuuid": "emailSubjectUUID",
                          "hooks": [],
                          "validations": [],
                          "type": "text",
                          "placeholder": "Subject",
                          "recursiveItemDisabled": true,
                          "formGroupClass": "content-container display-inline",
                          "textfieldClass": "body2 width-85",
                          "name": "emailSubject",
                          "defaultValue": "#emailSubjectString",
                          "label": "Subject",
                          "labelClass": "label-fault",
                          "bindLabel": true,
                          "required": true,
                          "labelKey": "revisionLevelInbound",
                          "actions": []
                        },
                        {
                          "ctype": "textarea",
                          "label": "Body",
                          "name": "emailBodyNote",
                          "value": "#userAccountInfo.PersonalDetails.USERID",
                          "textareaContainer": "timeout-class required-note",
                          "uuid": "emailBodyUUID",
                          "labelPosition": "width-18",
                          "required": true,
                          "submitable": true,
                          "actions": []
                        }
                      ],
                      "footer": [
                        {
                          "ctype": "button",
                          "color": "primary",
                          "text": "Cancel",
                          "uuid": "cancelHoldUUID",
                          "closeType": "close",
                          "disableClose": true,
                          "visibility": true,
                          "dialogButton": true,
                          "type": "",
                          "hooks": [],
                          "validations": [],
                          "actions": []
                        },
                        {
                          "ctype": "button",
                          "color": "primary",
                          "text": "Send",
                          "uuid": "sendEmailButtonUUID",
                          "dialogButton": true,
                          "visibility": true,
                          "disabled": true,
                          "type": "submit",
                          "closeType": "success",
                          "hooks": [],
                          "validations": [],
                          "actions": []
                        }
                      ]
                    },
                    "eventSource": "click",
                    "responseDependents": {
                      "onSuccess": {
                        "actions": [
                          {
                            "type": "context",
                            "config": {
                              "key": "emailBody",
                              "data": "formData",
                              "requestMethod": "add",
                              "value": "emailBodyNote"
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "context",
                            "config": {
                              "key": "emailBody",
                              "data": "formData",
                              "requestMethod": "add",
                              "value": "emailSubject"
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "context",
                            "config": {
                              "key": "emailBody",
                              "data": "formData",
                              "requestMethod": "add",
                              "value": "emailToAddress"
                            },
                            "eventSource": "click"
                          },
                          {
                            "type": "microservice",
                            "config": {
                              "microserviceId": "missingaccessMail",
                              "isLocal": false,
                              "LocalService": "assets/Responses/performFA.json",
                              "toBeStringified": true,
                              "requestMethod": "get",
                              "params": {
                                "to": "#emailBody.emailToAddress",
                                "from": "donotreply@ivytech.com",
                                "subject": "#emailBody.emailSubject",
                                "body": "#emailBody.emailBodyNote"
                              }
                            },
                            "eventSource": "click",
                            "responseDependents": {
                              "onSuccess": {
                                "actions": [
                                  {}
                                ]
                              },
                              "onFailure": {
                                "actions": [
                                  {}
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "onFailure": {}
                    }
                  }
                ]
              }
            ]
          }
        ],
        "footer": [
          {
            "ctype": "iconbutton",
            "text": "Reset Form",
            "uuid": "resetConfirmAccessoriesUUID",
            "visibility": true,
            "checkGroupValidity": false,
            "disabled": false,
            "hooks": [],
            "validations": [],
            "icon": "not_interested",
            "iconClass": "resetIcon",
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "missingAccessoriesList",
                  "data": ""
                },
                "eventSource": "click"
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "numOfValidatedFieldsInCA",
                  "data": 0
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "confirmAccessoriesCompleteUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "clearFlexFieldAccessories",
                "eventSource": "click"
              }
            ]
          },
          {
            "ctype": "button",
            "color": "primary",
            "text": "Complete",
            "uuid": "confirmAccessoriesCompleteUUID",
            "class": "primary-btn",
            "visibility": true,
            "disabled": true,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "accessoryFilledTrue",
                  "data": "True"
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "confirmAccessoriesUUID",
                  "properties": {
                    "expanded": false,
                    "disabled": false,
                    "header": {
                      "title": "Confirm Accessories (required for VFT)",
                      "icon": "description",
                      "statusIcon": "check_circle",
                      "statusClass": "complete-status",
                      "class": "complete-task",
                      "iconClass": "complete-task"
                    }
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "confirmAccessoriesCompleteUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "click"
              },
              {
                "type": "enableComponent",
                "config": {
                  "key": "quickRestoreResultCodesUUID",
                  "property": "ResultCodes"
                },
                "eventSource": "click"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "resetConfirmAccessoriesUUID",
                  "properties": {
                    "disabled": true
                  }
                },
                "eventSource": "click"
              }
            ]
          }
        ]
      }
    ],
    "footer": [
      {
        "ctype": "toolbar",
        "toolbarClass": "pagecontent-footer",
        "items": [
          {
            "ctype": "iconbutton",
            "iconButtonClass": "footer-save body",
            "text": "Exit",
            "uuid": "discrepancySaveUUID",
            "visibility": true,
            "disabled": false,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "icon": "save",
            "actions": [
              {
                "type": "deleteComponent",
                "eventSource": "click",
                "config": {
                  "key": "#currentTaskUUID"
                }
              },
              {
                "type": "renderTemplate",
                "config": {
                  "templateId": "dashboard.json",
                  "mode": "local"
                },
                "eventSource": "click"
              }
            ]
          },
          {
            "ctype": "iconbutton",
            "iconButtonClass": "footer-save ml-1 body",
            "text": " Exit",
            "uuid": "exitUUID",
            "visibility": true,
            "disabled": false,
            "type": "submit",
            "icon": "close",
            "actions": [
              {
                "type": "clearScreenData",
                "eventSource": "click"
              },
              {
                "type": "context",
                "config": {
                  "requestMethod": "delete",
                  "key": "currentWC"
                },
                "eventSource": "click"
              },
              {
                "type": "renderTemplate",
                "config": {
                  "templateId": "dashboard.json",
                  "mode": "local"
                },
                "eventSource": "click"
              }
            ]
          },
          {
            "ctype": "iconText",
            "uuid": "discrepancyIconUUID",
            "icon": "add_comment",
            "text": "Add Note",
            "disabled": false,
            "textCss": "",
            "iconPosition": "Before",
            "iconTextClass": "footer-addNote body",
            "actions": [
              {
                "type": "dialog",
                "uuid": "addNoteDialogUUID",
                "config": {
                  "title": "Add Note",
                  "items": [
                    {
                      "ctype": "textarea",
                      "name": "addNote",
                      "textareaClass": "note-class",
                      "uuid": "addNoteUUID",
                      "required": true,
                      "value": "#qrtimeoutNotes.addNote",
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "doneaddnoteUUID",
                            "properties": {
                              "disabled": false
                            }
                          },
                          "eventSource": "onLoad"
                        }
                      ]
                    }
                  ],
                  "footer": [
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Cancel",
                      "uuid": "cancelHoldUUID",
                      "closeType": "close",
                      "disableClose": true,
                      "visibility": true,
                      "dialogButton": true,
                      "type": "",
                      "hooks": [],
                      "validations": [],
                      "actions": []
                    },
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Done",
                      "uuid": "doneaddnoteUUID",
                      "dialogButton": true,
                      "visibility": true,
                      "disabled": true,
                      "type": "submit",
                      "closeType": "success",
                      "hooks": [],
                      "validations": [],
                      "actions": []
                    }
                  ]
                },
                "eventSource": "click",
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "context",
                        "config": {
                          "key": "qrtimeoutNotes",
                          "data": "formData",
                          "requestMethod": "add",
                          "value": "addNote"
                        },
                        "eventSource": "click"
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": []
                  }
                }
              }
            ]
          },
          {
            "ctype": "iconbutton",
            "uuid": "discrepancyResumeUUID",
            "visibility": true,
            "disabled": false,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "icon": "play_arrow",
            "iconClass": "",
            "hidden": true,
            "disableRipple": true
          },
          {
            "ctype": "spacer",
            "uuid": "emptySpaceUUID",
            "class": "empty-space"
          },
          {
            "ctype": "iconbutton",
            "uuid": "discrepancyPauseUUID",
            "visibility": true,
            "disabled": false,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "icon": "pause",
            "iconClass": "",
            "disableRipple": true,
            "actions": [
              {
                "type": "dialog",
                "uuid": "pauseDialogUUID",
                "config": {
                  "title": "Hold",
                  "items": [
                    {
                      "ctype": "nativeDropdown",
                      "formGroupClass": "discrepancy-holddrpdwn",
                      "uuid": "holdTypeUUID",
                      "label": "Hold Type",
                      "name": "holdType",
                      "required": true,
                      "dataSource": "#holdCodesForDiscrepancy",
                      "code": "storageHoldSubCode",
                      "displayValue": "storageHoldSubCode",
                      "defaultValue": "#storageHoldSubCode",
                      "actions": [
                        {
                          "type": "context",
                          "config": {
                            "requestMethod": "add",
                            "key": "storageHoldSubCode",
                            "data": "elementControlValue"
                          },
                          "eventSource": "change"
                        },
                        {
                          "type": "GetValueFromArray",
                          "config": {
                            "arrayData": "#holdCodesForDiscrepancy",
                            "PullValue": "storageHoldCode"
                          },
                          "eventSource": "change"
                        }
                      ]
                    },
                    {
                      "ctype": "textarea",
                      "label": "Add note",
                      "name": "holdAddNote",
                      "textareaContainer": "timeout-class required-note",
                      "uuid": "holdNodeUUID",
                      "value": "#holdAddNote.holdAddNote",
                      "required": true,
                      "submitable": true,
                      "actions": []
                    }
                  ],
                  "footer": [
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Cancel",
                      "uuid": "cancelHoldUUID",
                      "closeType": "close",
                      "disableClose": true,
                      "visibility": true,
                      "dialogButton": true,
                      "type": "",
                      "hooks": [],
                      "validations": [],
                      "actions": []
                    },
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Done",
                      "uuid": "doneHoldUUID",
                      "dialogButton": true,
                      "visibility": true,
                      "disabled": true,
                      "type": "submit",
                      "closeType": "success",
                      "hooks": [],
                      "validations": [],
                      "actions": [
                        {
                          "type": "context",
                          "config": {
                            "key": "qrtimeoutNotes",
                            "data": "formData",
                            "requestMethod": "add",
                            "value": "holdAddNote"
                          },
                          "eventSource": "click"
                        }
                      ]
                    }
                  ]
                },
                "eventSource": "click",
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "context",
                        "config": {
                          "key": "holdDialogData",
                          "data": "formData",
                          "requestMethod": "add"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "microservice",
                        "config": {
                          "microserviceId": "addInfoCodes",
                          "isLocal": false,
                          "LocalService": "assets/Responses/performFA.json",
                          "requestMethod": "post",
                          "body": {
                            "bcn": "#discrepancyUnitInfo.ITEM_BCN",
                            "notes": "#holdDialogData.holdAddNote",
                            "workCenter": "#discrepancyUnitInfo.WORKCENTER",
                            "geography": "#discrepancyUnitInfo.GEONAME",
                            "part": "#discrepancyUnitInfo.PART_NO",
                            "woTimeLoggedInHours": "1",
                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                            "password": "#loginUUID.password",
                            "flexFields": [
                              {
                                "name": "QR_REASON",
                                "value": "#userSelectedSoftwareReason"
                              }
                            ]
                          },
                          "toBeStringified": true,
                          "spliceIfEmptyValueObject": [
                            {
                              "identifier": "flexFields",
                              "valueField": "value",
                              "keyToBeRemoved": "flexFields"
                            }
                          ]
                        },
                        "responseDependents": {
                          "onSuccess": {
                            "actions": [
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "addInfoRespData",
                                  "data": "responseData"
                                }
                              },
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "mb_pnFieldValue",
                                  "data": ""
                                },
                                "eventSource": "click"
                              },
                              {
                                "type": "microservice",
                                "config": {
                                  "microserviceId": "getHPTMOCOMMDebug",
                                  "isLocal": false,
                                  "LocalService": "assets/Responses/performFA.json",
                                  "toBeStringified": true,
                                  "requestMethod": "post",
                                  "body": {
                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                    "workOrderId": "#repairUnitInfo.WORKORDER_ID",
                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                    "flexFields": {
                                      "flexFieldsList": [
                                        {
                                          "name": "Description Quality",
                                          "value": "Correct"
                                        },
                                        {
                                          "name": "NTF information useful",
                                          "value": "abf"
                                        }
                                      ]
                                    }
                                  },
                                  "eventSource": "click"
                                },
                                "responseDependents": {
                                  "onSuccess": {
                                    "actions": [
                                      {
                                        "type": "microservice",
                                        "config": {
                                          "microserviceId": "getHPRLSCommonDebugTrigger",
                                          "isLocal": false,
                                          "LocalService": "assets/Responses/performFA.json",
                                          "requestMethod": "get",
                                          "params": {
                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                            "triggerSubType": "RELEASE",
                                            "storageHoldCode": "#storageHoldCode",
                                            "notes": "#holdDialogData.holdAddNote"
                                          }
                                        },
                                        "responseDependents": {
                                          "onSuccess": {
                                            "actions": [
                                              {
                                                "type": "microservice",
                                                "config": {
                                                  "microserviceId": "moveinventory",
                                                  "isLocal": false,
                                                  "LocalService": "assets/Responses/performFA.json",
                                                  "requestMethod": "post",
                                                  "body": {
                                                    "apiUsageClientName": "#discrepancyUnitInfo.CLIENTNAME",
                                                    "apiUsageLocationName": "#discrepancyUnitInfo.GEONAME",
                                                    "callSource": "FrontEnd",
                                                    "ip": "::1",
                                                    "items": {
                                                      "addtionalDetails": {
                                                        "comments": "#holdDialogData.holdAddNote",
                                                        "fixedAssetTag": "#discrepancyUnitInfo.FAT",
                                                        "storageHoldCode": "#storageHoldCode",
                                                        "storageHoldSubCode": "#storageHoldSubCode"
                                                      },
                                                      "destinationLocation": {
                                                        "bin": "Default",
                                                        "geography": "#discrepancyUnitInfo.GEONAME",
                                                        "stockingLocation": "WUR DGI",
                                                        "warehouse": "HP LAPTOP WUR"
                                                      },
                                                      "item": [
                                                        {
                                                          "bcn": "#discrepancyUnitInfo.ITEM_BCN",
                                                          "owner": "#discrepancyUnitInfo.CLIENTNAME",
                                                          "partNo": "#discrepancyUnitInfo.PART_NO",
                                                          "quantity": "1",
                                                          "serialNo": "#discrepancyUnitInfo.SERIAL_NO",
                                                          "condition": "Defective"
                                                        }
                                                      ],
                                                      "notes": "#holdDialogData.holdAddNote",
                                                      "sourceLocation": {
                                                        "bin": "Default",
                                                        "geography": "#discrepancyUnitInfo.GEONAME",
                                                        "stockingLocation": "WIP",
                                                        "warehouse": "HP LAPTOP WUR"
                                                      }
                                                    },
                                                    "usrPwd": {
                                                      "userName": "#loginUUID.username",
                                                      "password": "#loginUUID.password"
                                                    }
                                                  },
                                                  "toBeStringified": true
                                                },
                                                "responseDependents": {
                                                  "onSuccess": {
                                                    "actions": [
                                                      {
                                                        "type": "pauseScreenData"
                                                      },
                                                      {
                                                        "type": "renderTemplate",
                                                        "config": {
                                                          "templateId": "dashboard.json",
                                                          "mode": "local"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "onFailure": {
                                                    "actions": [
                                                      {
                                                        "type": "context",
                                                        "config": {
                                                          "requestMethod": "add",
                                                          "key": "moveinventoryForDiscrepancy",
                                                          "data": "responseData"
                                                        }
                                                      },
                                                      {
                                                        "type": "updateComponent",
                                                        "config": {
                                                          "key": "discrepancyErrorTitleUUID",
                                                          "properties": {
                                                            "titleValue": "#moveinventoryForDiscrepancy",
                                                            "isShown": true
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                "eventSource": "click"
                                              }
                                            ]
                                          },
                                          "onFailure": {
                                            "actions": [
                                              [
                                                {
                                                  "type": "context",
                                                  "config": {
                                                    "requestMethod": "add",
                                                    "key": "errorResp",
                                                    "data": "responseData"
                                                  }
                                                },
                                                {
                                                  "type": "updateComponent",
                                                  "config": {
                                                    "key": "errorTitleUUID",
                                                    "properties": {
                                                      "titleValue": "#errorResp",
                                                      "isShown": true
                                                    }
                                                  }
                                                }
                                              ]
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "onFailure": {
                                    "actions": [
                                      [
                                        {
                                          "type": "context",
                                          "config": {
                                            "requestMethod": "add",
                                            "key": "errorResp",
                                            "data": "responseData"
                                          }
                                        },
                                        {
                                          "type": "updateComponent",
                                          "config": {
                                            "key": "errorTitleUUID",
                                            "properties": {
                                              "titleValue": "#errorResp",
                                              "isShown": true
                                            }
                                          }
                                        }
                                      ]
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "onFailure": {
                            "actions": [
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "addInfoError",
                                  "data": "responseData"
                                }
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "errorTitleUUID",
                                  "properties": {
                                    "titleValue": "#addInfoError",
                                    "isShown": true
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "eventSource": "click"
                      }
                    ]
                  },
                  "onFailure": {}
                }
              }
            ]
          },
          {
            "ctype": "nativeDropdown",
            "dropdownClass": "footer-dropdown dropdown-container body2",
            "uuid": "quickRestoreResultCodesUUID",
            "name": "ResultCodes",
            "dataSource": "#resultCodesForDiscrepancy",
            "code": "resultCode",
            "displayValue": "resultCode",
            "disabled": true,
            "actions": [
              {
                "type": "context",
                "config": {
                  "requestMethod": "add",
                  "key": "SelectedDescripencyResultcode",
                  "data": "elementControlValue"
                },
                "eventSource": "change"
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "quickRestoreTimeoutUUID",
                  "properties": {
                    "disabled": false
                  }
                },
                "eventSource": "change"
              },
              {
                "type": "condition",
                "eventSource": "change",
                "config": {
                  "operation": "isEqualTo",
                  "lhs": "#SelectedDescripencyResultcode",
                  "rhs": "PASS-FT"
                },
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "vftTaskUUID",
                          "properties": {
                            "expanded": true,
                            "isOneTaskPanelAtTime": false
                          }
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "confirmAccessoriesUUID",
                          "properties": {
                            "expanded": true,
                            "isOneTaskPanelAtTime": false
                          }
                        },
                        "eventSource": "click"
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": [
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "vftTaskUUID",
                          "properties": {
                            "expanded": false
                          }
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "updateComponent",
                        "config": {
                          "key": "confirmAccessoriesUUID",
                          "properties": {
                            "expanded": false
                          }
                        },
                        "eventSource": "click"
                      }
                    ]
                  }
                }
              },
              {
                "type": "updateComponent",
                "config": {
                  "key": "errorTitleUUID",
                  "properties": {
                    "titleValue": "",
                    "isShown": true
                  }
                },
                "eventSource": "change"
              }
            ]
          },
          {
            "ctype": "button",
            "color": "primary",
            "text": "Time Out",
            "uuid": "quickRestoreTimeoutUUID",
            "visibility": true,
            "disabled": true,
            "type": "submit",
            "hooks": [],
            "validations": [],
            "buttonClass": "footer-button primary-btn",
            "class": "primary-btn",
            "actions": [
              {
                "type": "dialog",
                "uuid": "pauseDialogUUID",
                "config": {
                  "title": "Time Out",
                  "items": [
                    {
                      "ctype": "textarea",
                      "label": "Add note",
                      "name": "addNote",
                      "textareaClass": "note-class",
                      "uuid": "timeoutAddNoteUUID",
                      "required": true,
                      "submitable": true,
                      "value": "#qrtimeoutNotes.addNote",
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "doneTimeOutUUID",
                            "properties": {
                              "disabled": false
                            }
                          },
                          "eventSource": "onLoad"
                        }
                      ]
                    }
                  ],
                  "footer": [
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Cancel",
                      "uuid": "cancelTimeOutUUID",
                      "closeType": "close",
                      "disableClose": true,
                      "visibility": true,
                      "dialogButton": true,
                      "type": "",
                      "hooks": [],
                      "validations": [],
                      "actions": []
                    },
                    {
                      "ctype": "button",
                      "color": "primary",
                      "text": "Done",
                      "uuid": "doneTimeOutUUID",
                      "dialogButton": true,
                      "visibility": true,
                      "disabled": true,
                      "type": "submit",
                      "closeType": "success",
                      "hooks": [],
                      "validations": [],
                      "actions": []
                    }
                  ]
                },
                "eventSource": "click",
                "responseDependents": {
                  "onSuccess": {
                    "actions": [
                      {
                        "type": "context",
                        "config": {
                          "key": "qrtimeoutNotes",
                          "data": "formData",
                          "requestMethod": "add",
                          "value": "addNote"
                        },
                        "eventSource": "click"
                      },
                      {
                        "type": "microservice",
                        "config": {
                          "microserviceId": "getStopShipProcess",
                          "requestMethod": "get",
                          "params": {
                            "locationId": "#repairUnitInfo.LOCATION_ID",
                            "clientId": "#repairUnitInfo.CLIENT_ID",
                            "contract": "#repairUnitInfo.CONTRACT_ID",
                            "bcn": "#repairUnitInfo.ITEM_BCN",
                            "serial": "#repairUnitInfo.SERIAL_NO",
                            "fat": "#repairUnitInfo.FAT",
                            "partNo": "#repairUnitInfo.PART_NO",
                            "opt": "#repairUnitInfo.ROUTE",
                            "wcid": "#repairUnitInfo.WORKCENTER_ID",
                            "userName": "#userAccountInfo.PersonalDetails.USERID"
                          }
                        },
                        "responseDependents": {
                          "onSuccess": {
                            "actions": [
                              {
                                "type": "microservice",
                                "config": {
                                  "microserviceId": "getHPTMOMBTrigger",
                                  "requestMethod": "get",
                                  "params": {
                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                    "resultCode": "#SelectedDescripencyResultcode",
                                    "triggerType": "TIMEOUT"
                                  }
                                },
                                "responseDependents": {
                                  "onSuccess": {
                                    "actions": [
                                      {
                                        "type": "condition",
                                        "eventSource": "change",
                                        "config": {
                                          "operation": "isEqualTo",
                                          "lhs": "#SelectedDescripencyResultcode",
                                          "rhs": "PASS-FT"
                                        },
                                        "responseDependents": {
                                          "onSuccess": {
                                            "actions": [
                                              {
                                                "type": "condition",
                                                "eventSource": "change",
                                                "config": {
                                                  "operation": "isValid",
                                                  "lhs": "#confirmAccessoriesFlexFieldsData"
                                                },
                                                "responseDependents": {
                                                  "onSuccess": {
                                                    "actions": [
                                                      {
                                                        "type": "condition",
                                                        "eventSource": "change",
                                                        "config": {
                                                          "operation": "isEqualTo",
                                                          "lhs": "#accessoryFilledTrue",
                                                          "rhs": "True"
                                                        },
                                                        "responseDependents": {
                                                          "onSuccess": {
                                                            "actions": [
                                                              {
                                                                "type": "microservice",
                                                                "config": {
                                                                  "microserviceId": "getHPAccessory",
                                                                  "requestMethod": "post",
                                                                  "body": {
                                                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                    "processType": "",
                                                                    "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                    "clientId": "#repairUnitInfo.CLIENT_ID",
                                                                    "contractId": "#repairUnitInfo.CONTRACT_ID",
                                                                    "locationId": "#repairUnitInfo.LOCATION_ID",
                                                                    "resultCode": "",
                                                                    "initialResultCode": "",
                                                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                                                    "workCenterName": "#repairUnitInfo.WORKCENTER",
                                                                    "flexFields": {
                                                                      "flexFieldsList": "#confirmAccessoriesFlexFieldsData"
                                                                    }
                                                                  },
                                                                  "toBeStringified": true
                                                                },
                                                                "responseDependents": {
                                                                  "onSuccess": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "microservice",
                                                                        "config": {
                                                                          "microserviceId": "hpcommtmooctopus",
                                                                          "requestMethod": "post",
                                                                          "body": {
                                                                            "locationId": "#repairUnitInfo.LOCATION_ID",
                                                                            "clientId": "#repairUnitInfo.CLIENT_ID",
                                                                            "contractId": "#repairUnitInfo.CONTRACT_ID",
                                                                            "serialnumber": "#repairUnitInfo.SERIAL_NO",
                                                                            "workOrderId": "#repairUnitInfo.WORKORDER_ID",
                                                                            "itemId": "#repairUnitInfo.ITEM_ID",
                                                                            "triggerType": "TIMEOUT",
                                                                            "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                            "resultCode": "PASS-FT"
                                                                          },
                                                                          "toBeStringified": true
                                                                        },
                                                                        "responseDependents": {
                                                                          "onSuccess": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "microservice",
                                                                                "config": {
                                                                                  "microserviceId": "getHpCommTmoHddCheck",
                                                                                  "isLocal": false,
                                                                                  "LocalService": "assets/Responses/trigger.json",
                                                                                  "requestMethod": "post",
                                                                                  "body": {
                                                                                    "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                                    "processType": "TIMEOUT",
                                                                                    "locationId": "#repairUnitInfo.LOCATION_ID",
                                                                                    "clientId": "#repairUnitInfo.CLIENT_ID",
                                                                                    "contractId": "#repairUnitInfo.CONTRACT_ID",
                                                                                    "orderProcessType": "#repairUnitInfo.ROUTE",
                                                                                    "workcenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                    "partnumber": "#repairUnitInfo.PART_NO",
                                                                                    "resultCode": "#SelectedDescripencyResultcode",
                                                                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                                                                    "workcentername": "#repairUnitInfo.WORKCENTER",
                                                                                    "serialnumber": "#repairUnitInfo.SERIAL_NO",
                                                                                    "ffName": "HDD SERIAL",
                                                                                    "ffValue": "#HddSerialOne",
                                                                                    "customField1": "octopus",
                                                                                    "customField2": "DSN",
                                                                                    "customField3": "HP_QUICK_RESTORE"
                                                                                  },
                                                                                  "toBeStringified": true
                                                                                },
                                                                                "responseDependents": {
                                                                                  "onSuccess": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "microservice",
                                                                                        "hookType": "afterInit",
                                                                                        "config": {
                                                                                          "microserviceId": "getCheckAcdcCodes",
                                                                                          "isLocal": false,
                                                                                          "LocalService": "assets/Responses/repairMockBIOSResponse.json",
                                                                                          "requestMethod": "get",
                                                                                          "params": {
                                                                                            "itemId": "#repairUnitInfo.ITEM_ID",
                                                                                            "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                                            "resultCode": "#SelectedDescripencyResultcode",
                                                                                            "triggerType": "TIMEOUT"
                                                                                          }
                                                                                        },
                                                                                        "responseDependents": {
                                                                                          "onSuccess": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "microservice",
                                                                                                "config": {
                                                                                                  "microserviceId": "performTimeOut",
                                                                                                  "requestMethod": "post",
                                                                                                  "body": {
                                                                                                    "timeOutRequest": {
                                                                                                      "location": "#repairUnitInfo.GEONAME",
                                                                                                      "bcn": "#repairUnitInfo.ITEM_BCN",
                                                                                                      "workCenter": "#repairUnitInfo.WORKCENTER",
                                                                                                      "password": "#loginUUID.password",
                                                                                                      "warrantyInd": "false",
                                                                                                      "notes": "#qrtimeoutNotes.addNote",
                                                                                                      "resultCode": "#SelectedDescripencyResultcode",
                                                                                                      "workCenterFlexFieldList": {
                                                                                                        "flexField": [
                                                                                                          {
                                                                                                            "name": "QR_REASON",
                                                                                                            "value": "#userSelectedSoftwareReason"
                                                                                                          },
                                                                                                          {
                                                                                                            "name": "Print label",
                                                                                                            "value": "#printLabelSelectionValue"
                                                                                                          },
                                                                                                          {
                                                                                                            "name": "Product Nr",
                                                                                                            "value": "#printlabelFormData.productValue"
                                                                                                          },
                                                                                                          {
                                                                                                            "name": "Serial Nr",
                                                                                                            "value": "#printlabelFormData.serialValue"
                                                                                                          },
                                                                                                          {
                                                                                                            "name": "Model Nr",
                                                                                                            "value": "#printlabelFormData.modelNr"
                                                                                                          }
                                                                                                        ]
                                                                                                      }
                                                                                                    },
                                                                                                    "modifyWarranty": 0,
                                                                                                    "timeOutType": "ProcessImmediate",
                                                                                                    "clientName": "#repairUnitInfo.CLIENTNAME",
                                                                                                    "contractName": "#repairUnitInfo.CONTRACTNAME",
                                                                                                    "userName": "#loginUUID.username",
                                                                                                    "userPass": "#loginUUID.password",
                                                                                                    "ip": "::1",
                                                                                                    "callSource": "FrontEnd",
                                                                                                    "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                                                                                    "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                                                                                  },
                                                                                                  "toBeStringified": true,
                                                                                                  "spliceIfEmptyValueObject": [
                                                                                                    {
                                                                                                      "identifier": "flexField",
                                                                                                      "valueField": "value",
                                                                                                      "keyToBeRemoved": "workCenterFlexFieldList"
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "responseDependents": {
                                                                                                  "onSuccess": {
                                                                                                    "actions": [
                                                                                                      {
                                                                                                        "type": "condition",
                                                                                                        "config": {
                                                                                                          "operation": "isEqualTo",
                                                                                                          "lhs": "#printLabelSelectionValue",
                                                                                                          "rhs": "YES"
                                                                                                        },
                                                                                                        "eventSource": "click",
                                                                                                        "responseDependents": {
                                                                                                          "onSuccess": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "microservice",
                                                                                                                "config": {
                                                                                                                  "microserviceId": "onePrint",
                                                                                                                  "requestMethod": "post",
                                                                                                                  "body": {
                                                                                                                    "locationId": "#userSelectedLocation",
                                                                                                                    "clientId": "#userSelectedClient",
                                                                                                                    "contractId": "#userSelectedContract",
                                                                                                                    "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                                    "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                                    "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                                    "eventName": "BYD_GN_REWORK_REPRINT",
                                                                                                                    "hostName": "#getHostNameResponse.hostName",
                                                                                                                    "ip": "#getHostNameResponse.ip",
                                                                                                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                                    "params": {
                                                                                                                      "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "toBeStringified": true
                                                                                                                },
                                                                                                                "responseDependents": {
                                                                                                                  "onSuccess": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "condition",
                                                                                                                        "eventSource": "change",
                                                                                                                        "config": {
                                                                                                                          "operation": "isEqualTo",
                                                                                                                          "lhs": "#SelectedDescripencyResultcode",
                                                                                                                          "rhs": "PASS_REW"
                                                                                                                        },
                                                                                                                        "responseDependents": {
                                                                                                                          "onSuccess": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "microservice",
                                                                                                                                "config": {
                                                                                                                                  "microserviceId": "onePrint",
                                                                                                                                  "requestMethod": "post",
                                                                                                                                  "body": {
                                                                                                                                    "locationId": "#userSelectedLocation",
                                                                                                                                    "clientId": "#userSelectedClient",
                                                                                                                                    "contractId": "#userSelectedContract",
                                                                                                                                    "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                                                    "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                                                    "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                                                    "eventName": "TIMEOUT",
                                                                                                                                    "hostName": "#getHostNameResponse.hostName",
                                                                                                                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                                                    "params": {
                                                                                                                                      "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                                                    }
                                                                                                                                  },
                                                                                                                                  "toBeStringified": true
                                                                                                                                },
                                                                                                                                "responseDependents": {
                                                                                                                                  "onSuccess": {
                                                                                                                                    "actions": [
                                                                                                                                      {
                                                                                                                                        "type": "context",
                                                                                                                                        "config": {
                                                                                                                                          "requestMethod": "add",
                                                                                                                                          "key": "onePrintResponse",
                                                                                                                                          "data": "responseData"
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "renderTemplate",
                                                                                                                                        "config": {
                                                                                                                                          "templateId": "dashboard.json",
                                                                                                                                          "mode": "local"
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "clearScreenData"
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  },
                                                                                                                                  "onFailure": {
                                                                                                                                    "actions": [
                                                                                                                                      {
                                                                                                                                        "type": "context",
                                                                                                                                        "config": {
                                                                                                                                          "requestMethod": "add",
                                                                                                                                          "key": "onePrintResponse",
                                                                                                                                          "data": "responseData"
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "updateComponent",
                                                                                                                                        "config": {
                                                                                                                                          "key": "errorTitleUUID",
                                                                                                                                          "properties": {
                                                                                                                                            "titleValue": "#onePrintResponse",
                                                                                                                                            "isShown": true
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "clearScreenData"
                                                                                                                                      },
                                                                                                                                      {
                                                                                                                                        "type": "context",
                                                                                                                                        "config": {
                                                                                                                                          "requestMethod": "addToGlobalContext",
                                                                                                                                          "key": "isOnePrintAPIFailed",
                                                                                                                                          "data": true
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    ]
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "onFailure": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "deleteComponent",
                                                                                                                                "eventSource": "click",
                                                                                                                                "config": {
                                                                                                                                  "key": "#currentTaskUUID"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "renderTemplate",
                                                                                                                                "config": {
                                                                                                                                  "templateId": "dashboard.json",
                                                                                                                                  "mode": "local"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "clearScreenData"
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "actions": [
                                                                                                                    {
                                                                                                                      "type": "context",
                                                                                                                      "config": {
                                                                                                                        "requestMethod": "add",
                                                                                                                        "key": "onePrintResponse",
                                                                                                                        "data": "responseData"
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "updateComponent",
                                                                                                                      "config": {
                                                                                                                        "key": "errorTitleUUID",
                                                                                                                        "properties": {
                                                                                                                          "titleValue": "#onePrintResponse",
                                                                                                                          "isShown": true
                                                                                                                        }
                                                                                                                      }
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "clearScreenData"
                                                                                                                    },
                                                                                                                    {
                                                                                                                      "type": "context",
                                                                                                                      "config": {
                                                                                                                        "requestMethod": "addToGlobalContext",
                                                                                                                        "key": "isOnePrintAPIFailed",
                                                                                                                        "data": true
                                                                                                                      }
                                                                                                                    }
                                                                                                                  ]
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          },
                                                                                                          "onFailure": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "condition",
                                                                                                                "eventSource": "change",
                                                                                                                "config": {
                                                                                                                  "operation": "isEqualTo",
                                                                                                                  "lhs": "#SelectedDescripencyResultcode",
                                                                                                                  "rhs": "PASS_REW"
                                                                                                                },
                                                                                                                "responseDependents": {
                                                                                                                  "onSuccess": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "microservice",
                                                                                                                        "config": {
                                                                                                                          "microserviceId": "onePrint",
                                                                                                                          "requestMethod": "post",
                                                                                                                          "body": {
                                                                                                                            "locationId": "#userSelectedLocation",
                                                                                                                            "clientId": "#userSelectedClient",
                                                                                                                            "contractId": "#userSelectedContract",
                                                                                                                            "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                                            "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                                            "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                                            "eventName": "TIMEOUT",
                                                                                                                            "hostName": "#getHostNameResponse.hostName",
                                                                                                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                                            "params": {
                                                                                                                              "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "toBeStringified": true
                                                                                                                        },
                                                                                                                        "responseDependents": {
                                                                                                                          "onSuccess": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "add",
                                                                                                                                  "key": "onePrintResponse",
                                                                                                                                  "data": "responseData"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "renderTemplate",
                                                                                                                                "config": {
                                                                                                                                  "templateId": "dashboard.json",
                                                                                                                                  "mode": "local"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "clearScreenData"
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "onFailure": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "add",
                                                                                                                                  "key": "onePrintResponse",
                                                                                                                                  "data": "responseData"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "updateComponent",
                                                                                                                                "config": {
                                                                                                                                  "key": "errorTitleUUID",
                                                                                                                                  "properties": {
                                                                                                                                    "titleValue": "#onePrintResponse",
                                                                                                                                    "isShown": true
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "clearScreenData"
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "addToGlobalContext",
                                                                                                                                  "key": "isOnePrintAPIFailed",
                                                                                                                                  "data": true
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "onFailure": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "deleteComponent",
                                                                                                                        "eventSource": "click",
                                                                                                                        "config": {
                                                                                                                          "key": "#currentTaskUUID"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "renderTemplate",
                                                                                                                        "config": {
                                                                                                                          "templateId": "dashboard.json",
                                                                                                                          "mode": "local"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "clearScreenData"
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  },
                                                                                                  "onFailure": {
                                                                                                    "actions": [
                                                                                                      {
                                                                                                        "type": "context",
                                                                                                        "config": {
                                                                                                          "requestMethod": "add",
                                                                                                          "key": "performTimeoutData",
                                                                                                          "data": "responseData"
                                                                                                        }
                                                                                                      },
                                                                                                      {
                                                                                                        "type": "updateComponent",
                                                                                                        "config": {
                                                                                                          "key": "errorTitleUUID",
                                                                                                          "properties": {
                                                                                                            "titleValue": "#performTimeoutData",
                                                                                                            "isShown": true
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "onFailure": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "add",
                                                                                                  "key": "getCheckAcdcCodesQuickRestoreData",
                                                                                                  "data": "responseData"
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "errorTitleUUID",
                                                                                                  "properties": {
                                                                                                    "titleValue": "#getCheckAcdcCodesQuickRestoreData",
                                                                                                    "isShown": true
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "onFailure": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "context",
                                                                                        "config": {
                                                                                          "requestMethod": "add",
                                                                                          "key": "getHpCommTmoHddCheckData",
                                                                                          "data": "responseData"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "updateComponent",
                                                                                        "config": {
                                                                                          "key": "errorTitleUUID",
                                                                                          "properties": {
                                                                                            "titleValue": "#getHpCommTmoHddCheckData",
                                                                                            "isShown": true
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "onFailure": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "add",
                                                                                  "key": "hpcommtmooctopusData",
                                                                                  "data": "responseData"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "updateComponent",
                                                                                "config": {
                                                                                  "key": "errorTitleUUID",
                                                                                  "properties": {
                                                                                    "titleValue": "#hpcommtmooctopusData",
                                                                                    "isShown": true
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "onFailure": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "context",
                                                                        "config": {
                                                                          "requestMethod": "add",
                                                                          "key": "getHPAccessoryData",
                                                                          "data": "responseData"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "updateComponent",
                                                                        "config": {
                                                                          "key": "errorTitleUUID",
                                                                          "properties": {
                                                                            "titleValue": "#getHPAccessoryData",
                                                                            "isShown": true
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "onFailure": {
                                                            "actions": [
                                                              {
                                                                "type": "context",
                                                                "config": {
                                                                  "requestMethod": "add",
                                                                  "key": "passFtDataFaild",
                                                                  "data": "Confirm Accessories Are Mandatory"
                                                                }
                                                              },
                                                              {
                                                                "type": "updateComponent",
                                                                "config": {
                                                                  "key": "errorTitleUUID",
                                                                  "properties": {
                                                                    "titleValue": "#passFtDataFaild",
                                                                    "isShown": true
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "onFailure": {
                                                    "actions": [
                                                      {
                                                        "type": "condition",
                                                        "eventSource": "change",
                                                        "config": {
                                                          "operation": "isValid",
                                                          "lhs": "#accessoryFilledFalse"
                                                        },
                                                        "responseDependents": {
                                                          "onSuccess": {
                                                            "actions": [
                                                              {
                                                                "type": "microservice",
                                                                "config": {
                                                                  "microserviceId": "hpcommtmooctopus",
                                                                  "requestMethod": "post",
                                                                  "body": {
                                                                    "locationId": "#repairUnitInfo.LOCATION_ID",
                                                                    "clientId": "#repairUnitInfo.CLIENT_ID",
                                                                    "contractId": "#repairUnitInfo.CONTRACT_ID",
                                                                    "serialnumber": "#repairUnitInfo.SERIAL_NO",
                                                                    "workOrderId": "#repairUnitInfo.WORKORDER_ID",
                                                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                                                    "triggerType": "TIMEOUT",
                                                                    "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                    "resultCode": "PASS-FT"
                                                                  },
                                                                  "toBeStringified": true
                                                                },
                                                                "responseDependents": {
                                                                  "onSuccess": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "microservice",
                                                                        "config": {
                                                                          "microserviceId": "getHpCommTmoHddCheck",
                                                                          "isLocal": false,
                                                                          "LocalService": "assets/Responses/trigger.json",
                                                                          "requestMethod": "post",
                                                                          "body": {
                                                                            "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                            "processType": "TIMEOUT",
                                                                            "locationId": "#repairUnitInfo.LOCATION_ID",
                                                                            "clientId": "#repairUnitInfo.CLIENT_ID",
                                                                            "contractId": "#repairUnitInfo.CONTRACT_ID",
                                                                            "orderProcessType": "#repairUnitInfo.ROUTE",
                                                                            "workcenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                            "partnumber": "#repairUnitInfo.PART_NO",
                                                                            "resultCode": "#SelectedDescripencyResultcode",
                                                                            "itemId": "#repairUnitInfo.ITEM_ID",
                                                                            "workcentername": "#repairUnitInfo.WORKCENTER",
                                                                            "serialnumber": "#repairUnitInfo.SERIAL_NO",
                                                                            "ffName": "HDD SERIAL",
                                                                            "ffValue": "#HddSerialOne",
                                                                            "customField1": "octopus",
                                                                            "customField2": "DSN",
                                                                            "customField3": "HP_QUICK_RESTORE"
                                                                          },
                                                                          "toBeStringified": true
                                                                        },
                                                                        "responseDependents": {
                                                                          "onSuccess": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "microservice",
                                                                                "hookType": "afterInit",
                                                                                "config": {
                                                                                  "microserviceId": "getCheckAcdcCodes",
                                                                                  "isLocal": false,
                                                                                  "LocalService": "assets/Responses/repairMockBIOSResponse.json",
                                                                                  "requestMethod": "get",
                                                                                  "params": {
                                                                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                                                                    "username": "#userAccountInfo.PersonalDetails.USERID",
                                                                                    "resultCode": "#SelectedDescripencyResultcode",
                                                                                    "triggerType": "TIMEOUT"
                                                                                  }
                                                                                },
                                                                                "responseDependents": {
                                                                                  "onSuccess": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "microservice",
                                                                                        "config": {
                                                                                          "microserviceId": "performTimeOut",
                                                                                          "requestMethod": "post",
                                                                                          "body": {
                                                                                            "timeOutRequest": {
                                                                                              "location": "#repairUnitInfo.GEONAME",
                                                                                              "bcn": "#repairUnitInfo.ITEM_BCN",
                                                                                              "workCenter": "#repairUnitInfo.WORKCENTER",
                                                                                              "password": "#loginUUID.password",
                                                                                              "warrantyInd": "false",
                                                                                              "notes": "#qrtimeoutNotes.addNote",
                                                                                              "resultCode": "#SelectedDescripencyResultcode",
                                                                                              "workCenterFlexFieldList": {
                                                                                                "flexField": [
                                                                                                  {
                                                                                                    "name": "QR_REASON",
                                                                                                    "value": "#userSelectedSoftwareReason"
                                                                                                  },
                                                                                                  {
                                                                                                    "name": "Print label",
                                                                                                    "value": "#printLabelSelectionValue"
                                                                                                  },
                                                                                                  {
                                                                                                    "name": "Product Nr",
                                                                                                    "value": "#printlabelFormData.productValue"
                                                                                                  },
                                                                                                  {
                                                                                                    "name": "Serial Nr",
                                                                                                    "value": "#printlabelFormData.serialValue"
                                                                                                  },
                                                                                                  {
                                                                                                    "name": "Model Nr",
                                                                                                    "value": "#printlabelFormData.modelNr"
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            },
                                                                                            "modifyWarranty": 0,
                                                                                            "timeOutType": "ProcessImmediate",
                                                                                            "clientName": "#repairUnitInfo.CLIENTNAME",
                                                                                            "contractName": "#repairUnitInfo.CONTRACTNAME",
                                                                                            "userName": "#loginUUID.username",
                                                                                            "userPass": "#loginUUID.password",
                                                                                            "ip": "::1",
                                                                                            "callSource": "FrontEnd",
                                                                                            "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                                                                            "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                                                                          },
                                                                                          "toBeStringified": true,
                                                                                          "spliceIfEmptyValueObject": [
                                                                                            {
                                                                                              "identifier": "flexField",
                                                                                              "valueField": "value",
                                                                                              "keyToBeRemoved": "workCenterFlexFieldList"
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "responseDependents": {
                                                                                          "onSuccess": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "condition",
                                                                                                "config": {
                                                                                                  "operation": "isEqualTo",
                                                                                                  "lhs": "#printLabelSelectionValue",
                                                                                                  "rhs": "YES"
                                                                                                },
                                                                                                "eventSource": "click",
                                                                                                "responseDependents": {
                                                                                                  "onSuccess": {
                                                                                                    "actions": [
                                                                                                      {
                                                                                                        "type": "microservice",
                                                                                                        "config": {
                                                                                                          "microserviceId": "onePrint",
                                                                                                          "requestMethod": "post",
                                                                                                          "body": {
                                                                                                            "locationId": "#userSelectedLocation",
                                                                                                            "clientId": "#userSelectedClient",
                                                                                                            "contractId": "#userSelectedContract",
                                                                                                            "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                            "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                            "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                            "eventName": "BYD_GN_REWORK_REPRINT",
                                                                                                            "hostName": "#getHostNameResponse.hostName",
                                                                                                            "ip": "#getHostNameResponse.ip",
                                                                                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                            "params": {
                                                                                                              "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                            }
                                                                                                          },
                                                                                                          "toBeStringified": true
                                                                                                        },
                                                                                                        "responseDependents": {
                                                                                                          "onSuccess": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "condition",
                                                                                                                "eventSource": "change",
                                                                                                                "config": {
                                                                                                                  "operation": "isEqualTo",
                                                                                                                  "lhs": "#SelectedDescripencyResultcode",
                                                                                                                  "rhs": "PASS-REW"
                                                                                                                },
                                                                                                                "responseDependents": {
                                                                                                                  "onSuccess": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "microservice",
                                                                                                                        "config": {
                                                                                                                          "microserviceId": "onePrint",
                                                                                                                          "requestMethod": "post",
                                                                                                                          "body": {
                                                                                                                            "locationId": "#userSelectedLocation",
                                                                                                                            "clientId": "#userSelectedClient",
                                                                                                                            "contractId": "#userSelectedContract",
                                                                                                                            "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                                            "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                                            "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                                            "eventName": "TIMEOUT",
                                                                                                                            "hostName": "#getHostNameResponse.hostName",
                                                                                                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                                            "params": {
                                                                                                                              "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                                            }
                                                                                                                          },
                                                                                                                          "toBeStringified": true
                                                                                                                        },
                                                                                                                        "responseDependents": {
                                                                                                                          "onSuccess": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "clearScreenData"
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "add",
                                                                                                                                  "key": "onePrintResponse",
                                                                                                                                  "data": "responseData"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "renderTemplate",
                                                                                                                                "config": {
                                                                                                                                  "templateId": "dashboard.json",
                                                                                                                                  "mode": "local"
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          },
                                                                                                                          "onFailure": {
                                                                                                                            "actions": [
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "add",
                                                                                                                                  "key": "onePrintResponse",
                                                                                                                                  "data": "responseData"
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "updateComponent",
                                                                                                                                "config": {
                                                                                                                                  "key": "errorTitleUUID",
                                                                                                                                  "properties": {
                                                                                                                                    "titleValue": "#onePrintResponse",
                                                                                                                                    "isShown": true
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "clearScreenData"
                                                                                                                              },
                                                                                                                              {
                                                                                                                                "type": "context",
                                                                                                                                "config": {
                                                                                                                                  "requestMethod": "addToGlobalContext",
                                                                                                                                  "key": "isOnePrintAPIFailed",
                                                                                                                                  "data": true
                                                                                                                                }
                                                                                                                              }
                                                                                                                            ]
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "onFailure": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "clearScreenData"
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "context",
                                                                                                                        "config": {
                                                                                                                          "requestMethod": "add",
                                                                                                                          "key": "Accessories",
                                                                                                                          "data": []
                                                                                                                        },
                                                                                                                        "eventSource": "click"
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "deleteComponent",
                                                                                                                        "eventSource": "click",
                                                                                                                        "config": {
                                                                                                                          "key": "#currentTaskUUID"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "renderTemplate",
                                                                                                                        "config": {
                                                                                                                          "templateId": "dashboard.json",
                                                                                                                          "mode": "local"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          },
                                                                                                          "onFailure": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "context",
                                                                                                                "config": {
                                                                                                                  "requestMethod": "add",
                                                                                                                  "key": "onePrintResponse",
                                                                                                                  "data": "responseData"
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "updateComponent",
                                                                                                                "config": {
                                                                                                                  "key": "errorTitleUUID",
                                                                                                                  "properties": {
                                                                                                                    "titleValue": "#onePrintResponse",
                                                                                                                    "isShown": true
                                                                                                                  }
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "clearScreenData"
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "context",
                                                                                                                "config": {
                                                                                                                  "requestMethod": "addToGlobalContext",
                                                                                                                  "key": "isOnePrintAPIFailed",
                                                                                                                  "data": true
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  },
                                                                                                  "onFailure": {
                                                                                                    "actions": [
                                                                                                      {
                                                                                                        "type": "condition",
                                                                                                        "eventSource": "change",
                                                                                                        "config": {
                                                                                                          "operation": "isEqualTo",
                                                                                                          "lhs": "#SelectedDescripencyResultcode",
                                                                                                          "rhs": "PASS-REW"
                                                                                                        },
                                                                                                        "responseDependents": {
                                                                                                          "onSuccess": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "microservice",
                                                                                                                "config": {
                                                                                                                  "microserviceId": "onePrint",
                                                                                                                  "requestMethod": "post",
                                                                                                                  "body": {
                                                                                                                    "locationId": "#userSelectedLocation",
                                                                                                                    "clientId": "#userSelectedClient",
                                                                                                                    "contractId": "#userSelectedContract",
                                                                                                                    "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                                                    "routeCode": "#repairUnitInfo.ROUTE",
                                                                                                                    "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                                                    "eventName": "TIMEOUT",
                                                                                                                    "hostName": "#getHostNameResponse.hostName",
                                                                                                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                                                    "params": {
                                                                                                                      "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                                                    }
                                                                                                                  },
                                                                                                                  "toBeStringified": true
                                                                                                                },
                                                                                                                "responseDependents": {
                                                                                                                  "onSuccess": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "clearScreenData"
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "context",
                                                                                                                        "config": {
                                                                                                                          "requestMethod": "add",
                                                                                                                          "key": "onePrintResponse",
                                                                                                                          "data": "responseData"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "renderTemplate",
                                                                                                                        "config": {
                                                                                                                          "templateId": "dashboard.json",
                                                                                                                          "mode": "local"
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  },
                                                                                                                  "onFailure": {
                                                                                                                    "actions": [
                                                                                                                      {
                                                                                                                        "type": "context",
                                                                                                                        "config": {
                                                                                                                          "requestMethod": "add",
                                                                                                                          "key": "onePrintResponse",
                                                                                                                          "data": "responseData"
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "updateComponent",
                                                                                                                        "config": {
                                                                                                                          "key": "errorTitleUUID",
                                                                                                                          "properties": {
                                                                                                                            "titleValue": "#onePrintResponse",
                                                                                                                            "isShown": true
                                                                                                                          }
                                                                                                                        }
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "clearScreenData"
                                                                                                                      },
                                                                                                                      {
                                                                                                                        "type": "context",
                                                                                                                        "config": {
                                                                                                                          "requestMethod": "addToGlobalContext",
                                                                                                                          "key": "isOnePrintAPIFailed",
                                                                                                                          "data": true
                                                                                                                        }
                                                                                                                      }
                                                                                                                    ]
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          },
                                                                                                          "onFailure": {
                                                                                                            "actions": [
                                                                                                              {
                                                                                                                "type": "clearScreenData"
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "context",
                                                                                                                "config": {
                                                                                                                  "requestMethod": "add",
                                                                                                                  "key": "Accessories",
                                                                                                                  "data": []
                                                                                                                },
                                                                                                                "eventSource": "click"
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "deleteComponent",
                                                                                                                "eventSource": "click",
                                                                                                                "config": {
                                                                                                                  "key": "#currentTaskUUID"
                                                                                                                }
                                                                                                              },
                                                                                                              {
                                                                                                                "type": "renderTemplate",
                                                                                                                "config": {
                                                                                                                  "templateId": "dashboard.json",
                                                                                                                  "mode": "local"
                                                                                                                }
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    ]
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "onFailure": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "add",
                                                                                                  "key": "performTimeoutData",
                                                                                                  "data": "responseData"
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "errorTitleUUID",
                                                                                                  "properties": {
                                                                                                    "titleValue": "#performTimeoutData",
                                                                                                    "isShown": true
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "onFailure": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "context",
                                                                                        "config": {
                                                                                          "requestMethod": "add",
                                                                                          "key": "getCheckAcdcCodesQuickRestoreData",
                                                                                          "data": "responseData"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "updateComponent",
                                                                                        "config": {
                                                                                          "key": "errorTitleUUID",
                                                                                          "properties": {
                                                                                            "titleValue": "#getCheckAcdcCodesQuickRestoreData",
                                                                                            "isShown": true
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "onFailure": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "add",
                                                                                  "key": "getHpCommTmoHddCheckData",
                                                                                  "data": "responseData"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "updateComponent",
                                                                                "config": {
                                                                                  "key": "errorTitleUUID",
                                                                                  "properties": {
                                                                                    "titleValue": "#getHpCommTmoHddCheckData",
                                                                                    "isShown": true
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "onFailure": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "context",
                                                                        "config": {
                                                                          "requestMethod": "add",
                                                                          "key": "hpcommtmooctopusData",
                                                                          "data": "responseData"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "updateComponent",
                                                                        "config": {
                                                                          "key": "errorTitleUUID",
                                                                          "properties": {
                                                                            "titleValue": "#hpcommtmooctopusData",
                                                                            "isShown": true
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "onFailure": {
                                                            "actions": []
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "onFailure": {
                                            "actions": [
                                              {
                                                "type": "microservice",
                                                "hookType": "afterInit",
                                                "config": {
                                                  "microserviceId": "getCheckAcdcCodes",
                                                  "isLocal": false,
                                                  "LocalService": "assets/Responses/repairMockBIOSResponse.json",
                                                  "requestMethod": "get",
                                                  "params": {
                                                    "itemId": "#repairUnitInfo.ITEM_ID",
                                                    "username": "#userAccountInfo.PersonalDetails.USERID",
                                                    "resultCode": "#SelectedDescripencyResultcode",
                                                    "triggerType": "TIMEOUT"
                                                  }
                                                },
                                                "responseDependents": {
                                                  "onSuccess": {
                                                    "actions": [
                                                      {
                                                        "type": "microservice",
                                                        "config": {
                                                          "microserviceId": "performTimeOut",
                                                          "requestMethod": "post",
                                                          "body": {
                                                            "timeOutRequest": {
                                                              "location": "#repairUnitInfo.GEONAME",
                                                              "bcn": "#repairUnitInfo.ITEM_BCN",
                                                              "workCenter": "#repairUnitInfo.WORKCENTER",
                                                              "password": "#loginUUID.password",
                                                              "warrantyInd": "false",
                                                              "notes": "#qrtimeoutNotes.addNote",
                                                              "resultCode": "#SelectedDescripencyResultcode",
                                                              "workCenterFlexFieldList": {
                                                                "flexField": [
                                                                  {
                                                                    "name": "QR_REASON",
                                                                    "value": "#userSelectedSoftwareReason"
                                                                  },
                                                                  {
                                                                    "name": "Print label",
                                                                    "value": "#printLabelSelectionValue"
                                                                  },
                                                                  {
                                                                    "name": "Product Nr",
                                                                    "value": "#printlabelFormData.productValue"
                                                                  },
                                                                  {
                                                                    "name": "Serial Nr",
                                                                    "value": "#printlabelFormData.serialValue"
                                                                  },
                                                                  {
                                                                    "name": "Model Nr",
                                                                    "value": "#printlabelFormData.modelNr"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "modifyWarranty": 0,
                                                            "timeOutType": "ProcessImmediate",
                                                            "clientName": "#repairUnitInfo.CLIENTNAME",
                                                            "contractName": "#repairUnitInfo.CONTRACTNAME",
                                                            "userName": "#loginUUID.username",
                                                            "userPass": "#loginUUID.password",
                                                            "ip": "::1",
                                                            "callSource": "FrontEnd",
                                                            "apiUsage_LocationName": "#repairUnitInfo.GEONAME",
                                                            "apiUsage_ClientName": "#repairUnitInfo.CLIENTNAME"
                                                          },
                                                          "toBeStringified": true,
                                                          "spliceIfEmptyValueObject": [
                                                            {
                                                              "identifier": "flexField",
                                                              "valueField": "value",
                                                              "keyToBeRemoved": "workCenterFlexFieldList"
                                                            }
                                                          ]
                                                        },
                                                        "responseDependents": {
                                                          "onSuccess": {
                                                            "actions": [
                                                              {
                                                                "type": "condition",
                                                                "config": {
                                                                  "operation": "isEqualTo",
                                                                  "lhs": "#printLabelSelectionValue",
                                                                  "rhs": "YES"
                                                                },
                                                                "eventSource": "click",
                                                                "responseDependents": {
                                                                  "onSuccess": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "microservice",
                                                                        "config": {
                                                                          "microserviceId": "onePrint",
                                                                          "requestMethod": "post",
                                                                          "body": {
                                                                            "locationId": "#userSelectedLocation",
                                                                            "clientId": "#userSelectedClient",
                                                                            "contractId": "#userSelectedContract",
                                                                            "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                            "routeCode": "#repairUnitInfo.ROUTE",
                                                                            "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                            "eventName": "BYD_GN_REWORK_REPRINT",
                                                                            "hostName": "#getHostNameResponse.hostName",
                                                                            "ip": "#getHostNameResponse.ip",
                                                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                            "params": {
                                                                              "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                            }
                                                                          },
                                                                          "toBeStringified": true
                                                                        },
                                                                        "responseDependents": {
                                                                          "onSuccess": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "condition",
                                                                                "eventSource": "change",
                                                                                "config": {
                                                                                  "operation": "isEqualTo",
                                                                                  "lhs": "#SelectedDescripencyResultcode",
                                                                                  "rhs": "PASS_REW"
                                                                                },
                                                                                "responseDependents": {
                                                                                  "onSuccess": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "microservice",
                                                                                        "config": {
                                                                                          "microserviceId": "onePrint",
                                                                                          "requestMethod": "post",
                                                                                          "body": {
                                                                                            "locationId": "#userSelectedLocation",
                                                                                            "clientId": "#userSelectedClient",
                                                                                            "contractId": "#userSelectedContract",
                                                                                            "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                            "routeCode": "#repairUnitInfo.ROUTE",
                                                                                            "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                            "eventName": "TIMEOUT",
                                                                                            "hostName": "#getHostNameResponse.hostName",
                                                                                            "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                            "params": {
                                                                                              "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                            }
                                                                                          },
                                                                                          "toBeStringified": true
                                                                                        },
                                                                                        "responseDependents": {
                                                                                          "onSuccess": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "clearScreenData"
                                                                                              },
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "add",
                                                                                                  "key": "onePrintResponse",
                                                                                                  "data": "responseData"
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "renderTemplate",
                                                                                                "config": {
                                                                                                  "templateId": "dashboard.json",
                                                                                                  "mode": "local"
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "onFailure": {
                                                                                            "actions": [
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "add",
                                                                                                  "key": "onePrintResponse",
                                                                                                  "data": "responseData"
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "updateComponent",
                                                                                                "config": {
                                                                                                  "key": "errorTitleUUID",
                                                                                                  "properties": {
                                                                                                    "titleValue": "#onePrintResponse",
                                                                                                    "isShown": true
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              {
                                                                                                "type": "clearScreenData"
                                                                                              },
                                                                                              {
                                                                                                "type": "context",
                                                                                                "config": {
                                                                                                  "requestMethod": "addToGlobalContext",
                                                                                                  "key": "isOnePrintAPIFailed",
                                                                                                  "data": true
                                                                                                }
                                                                                              }
                                                                                            ]
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "onFailure": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "clearScreenData"
                                                                                      },
                                                                                      {
                                                                                        "type": "deleteComponent",
                                                                                        "eventSource": "click",
                                                                                        "config": {
                                                                                          "key": "#currentTaskUUID"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "renderTemplate",
                                                                                        "config": {
                                                                                          "templateId": "dashboard.json",
                                                                                          "mode": "local"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "onFailure": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "add",
                                                                                  "key": "onePrintResponse",
                                                                                  "data": "responseData"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "updateComponent",
                                                                                "config": {
                                                                                  "key": "errorTitleUUID",
                                                                                  "properties": {
                                                                                    "titleValue": "#onePrintResponse",
                                                                                    "isShown": true
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "clearScreenData"
                                                                              },
                                                                              {
                                                                                "type": "context",
                                                                                "config": {
                                                                                  "requestMethod": "addToGlobalContext",
                                                                                  "key": "isOnePrintAPIFailed",
                                                                                  "data": true
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "onFailure": {
                                                                    "actions": [
                                                                      {
                                                                        "type": "condition",
                                                                        "eventSource": "change",
                                                                        "config": {
                                                                          "operation": "isEqualTo",
                                                                          "lhs": "#SelectedDescripencyResultcode",
                                                                          "rhs": "PASS_REW"
                                                                        },
                                                                        "responseDependents": {
                                                                          "onSuccess": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "microservice",
                                                                                "config": {
                                                                                  "microserviceId": "onePrint",
                                                                                  "requestMethod": "post",
                                                                                  "body": {
                                                                                    "locationId": "#userSelectedLocation",
                                                                                    "clientId": "#userSelectedClient",
                                                                                    "contractId": "#userSelectedContract",
                                                                                    "warehouseId": "#repairUnitInfo.WAREHOUSE_ID",
                                                                                    "routeCode": "#repairUnitInfo.ROUTE",
                                                                                    "workCenterId": "#repairUnitInfo.WORKCENTER_ID",
                                                                                    "eventName": "TIMEOUT",
                                                                                    "hostName": "#getHostNameResponse.hostName",
                                                                                    "userName": "#userAccountInfo.PersonalDetails.USERID",
                                                                                    "params": {
                                                                                      "ITEM_ID": "#repairUnitInfo.ITEM_ID"
                                                                                    }
                                                                                  },
                                                                                  "toBeStringified": true
                                                                                },
                                                                                "responseDependents": {
                                                                                  "onSuccess": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "clearScreenData"
                                                                                      },
                                                                                      {
                                                                                        "type": "context",
                                                                                        "config": {
                                                                                          "requestMethod": "add",
                                                                                          "key": "onePrintResponse",
                                                                                          "data": "responseData"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "renderTemplate",
                                                                                        "config": {
                                                                                          "templateId": "dashboard.json",
                                                                                          "mode": "local"
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  "onFailure": {
                                                                                    "actions": [
                                                                                      {
                                                                                        "type": "context",
                                                                                        "config": {
                                                                                          "requestMethod": "add",
                                                                                          "key": "onePrintResponse",
                                                                                          "data": "responseData"
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "updateComponent",
                                                                                        "config": {
                                                                                          "key": "errorTitleUUID",
                                                                                          "properties": {
                                                                                            "titleValue": "#onePrintResponse",
                                                                                            "isShown": true
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      {
                                                                                        "type": "clearScreenData"
                                                                                      },
                                                                                      {
                                                                                        "type": "context",
                                                                                        "config": {
                                                                                          "requestMethod": "addToGlobalContext",
                                                                                          "key": "isOnePrintAPIFailed",
                                                                                          "data": true
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "onFailure": {
                                                                            "actions": [
                                                                              {
                                                                                "type": "clearScreenData"
                                                                              },
                                                                              {
                                                                                "type": "deleteComponent",
                                                                                "eventSource": "click",
                                                                                "config": {
                                                                                  "key": "#currentTaskUUID"
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "renderTemplate",
                                                                                "config": {
                                                                                  "templateId": "dashboard.json",
                                                                                  "mode": "local"
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "onFailure": {
                                                            "actions": [
                                                              {
                                                                "type": "context",
                                                                "config": {
                                                                  "requestMethod": "add",
                                                                  "key": "performTimeoutData",
                                                                  "data": "responseData"
                                                                }
                                                              },
                                                              {
                                                                "type": "updateComponent",
                                                                "config": {
                                                                  "key": "errorTitleUUID",
                                                                  "properties": {
                                                                    "titleValue": "#performTimeoutData",
                                                                    "isShown": true
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "onFailure": {
                                                    "actions": [
                                                      {
                                                        "type": "context",
                                                        "config": {
                                                          "requestMethod": "add",
                                                          "key": "getCheckAcdcCodesQuickRestoreData",
                                                          "data": "responseData"
                                                        }
                                                      },
                                                      {
                                                        "type": "updateComponent",
                                                        "config": {
                                                          "key": "errorTitleUUID",
                                                          "properties": {
                                                            "titleValue": "#getCheckAcdcCodesQuickRestoreData",
                                                            "isShown": true
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "onFailure": {
                                    "actions": [
                                      {
                                        "type": "context",
                                        "config": {
                                          "requestMethod": "add",
                                          "key": "getHPTMOMBTriggerData",
                                          "data": "responseData"
                                        }
                                      },
                                      {
                                        "type": "updateComponent",
                                        "config": {
                                          "key": "errorTitleUUID",
                                          "properties": {
                                            "titleValue": "#getHPTMOMBTriggerData",
                                            "isShown": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "onFailure": {
                            "actions": [
                              {
                                "type": "context",
                                "config": {
                                  "requestMethod": "add",
                                  "key": "getStopShipProcessData",
                                  "data": "responseData"
                                }
                              },
                              {
                                "type": "updateComponent",
                                "config": {
                                  "key": "errorTitleUUID",
                                  "properties": {
                                    "titleValue": "#getStopShipProcessData",
                                    "isShown": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "onFailure": {
                    "actions": []
                  }
                }
              }
            ]
          }
        ]
      }
    ]
  },
  "Result": "SUCCESS"
}