{
    "ResultData": {
      "ctype": "page",
      "uuid": "pageUUID",
      "visibility": true,
      "hooks": [        
        {
          "type": "microservice",
          "hookType": "afterInit",
          "config": {
            "microserviceId": "getResultCodes",
            "isLocal": false,
            "LocalService": "assets/Responses/mockBGA.json",
            "requestMethod": "get",
            "params": {
              "bcn": "#UnitInfo.ITEM_BCN",
              "validateResult": 1
            }
          },
          "responseDependents": {
            "onSuccess": {
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "getVerifoneTestResultcodes",
                    "data": "responseData"
                  }
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "ResultCodeVerifoneTestUUID",
                    "dropDownProperties": {
                      "options": "#getVerifoneTestResultcodes"
                    }
                  }
                }
              ]
            },
            "onFailure": {
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "errorMsg",
                    "data": "responseData"
                  }
                },
                {
                  "type": "condition",
                  "config": {
                    "operation": "isEqualTo",
                    "lhs": "#errorMsg",
                    "rhs": "No Record Found"
                  },
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "errorTitleUUID",
                            "properties": {
                              "titleValue": "#errorMsg",
                              "isShown": false
                            }
                          }
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "errorTitleUUID",
                            "properties": {
                              "titleValue": "#errorMsg",
                              "isShown": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "type": "microservice",
          "hookType": "afterInit",
          "config": {
              "microserviceId": "getPreviousWCNote",
              "requestMethod": "get",
              "params": {
                  "itemId": "#UnitInfo.ITEM_ID"
              }
          },
          "responseDependents": {
              "onSuccess": {
                  "actions": [
                      {
                          "type": "context",
                          "config": {
                              "requestMethod": "add",
                              "key": "lastNoteData",
                              "data": "responseData"
                          }
                      },
                      {
                          "type": "updateComponent",
                          "config": {
                              "key": "LastNoteTextUUID",
                              "properties": {
                                  "titleValue": "#lastNoteData.timeOutNote"
                              }
                          }
                      }
                  ]
              },
              "onFailure": {
                  "actions": [
                      {
                          "type": "context",
                          "config": {
                              "requestMethod": "add",
                              "key": "errorDisp",
                              "data": "responseData"
                          }
                      },
                      {
                          "type": "condition",
                          "config": {
                              "operation": "isEqualTo",
                              "lhs": "#errorDisp",
                              "rhs": "No Record Found"
                          },
                          "responseDependents": {
                              "onSuccess": {
                                  "actions": [
                                      {
                                          "type": "updateComponent",
                                          "config": {
                                              "key": "errorTitleUUID",
                                              "properties": {
                                                  "titleValue": "#errorDisp",
                                                  "isShown": false
                                              }
                                          }
                                      }
                                  ]
                              },
                              "onFailure": {
                                  "actions": [
                                      {
                                          "type": "updateComponent",
                                          "config": {
                                              "key": "errorTitleUUID",
                                              "properties": {
                                                  "titleValue": "#errorDisp",
                                                  "isShown": true
                                              }
                                          }
                                      }
                                  ]
                              }
                          }
                      }
                  ]
              }
          }
      }
      ],
      "header": [
        {
          "ctype": "breadcrumb",
          "style": "padding-left: 4px;",
          "breadcrumbs": [
            {
              "label": "#userSelectedLocationName"
            },
            {
              "label": "#UnitInfo.CLIENTNAME"
            },
            {
              "label": "#userSelectedContractName"
            }
          ]
        },
        {
          "ctype": "toolbar",
          "css": "padding-top: 35px;",
          "toolbarClass": "pagecontent-header",
          "items": [
            {
              "ctype": "title",
              "uuid": "TestHeadertitleuuid",
              "titleValue": "Test",
              "titleClass": "section-title",
              "css": "padding-bottom: 35px;padding-left: 4px;"
            },
            {
              "ctype": "spacer",
              "uuid": "emptySpaceUUID",
              "class": "empty-space"
            },
            {
              "ctype": "iconbutton",
              "iconButtonClass": "headeropen-button",
              "text": "",
              "uuid": "pageopenUUID",
              "visibility": true,
              "disabled": false,
              "hidden": false,
              "type": "submit",
              "hooks": [],
              "validations": [],
              "icon": "menu_open",
              "disableRipple": true,
              "iconClass": "header-icon",
              "css": "padding-bottom: 35px;",
              "actions": [
                {
                  "type": "toggle",
                  "eventSource": "click",
                  "name": "subProcessRightNavref"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "openUUID",
                    "properties": {
                      "hidden": false
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "pageopenUUID",
                    "properties": {
                      "hidden": true
                    }
                  },
                  "eventSource": "click"
                }
              ]
            }
          ]
        }
      ],
      "items": [
        {
          "ctype": "title",
          "uuid": "errorTitleUUID",
          "titleClass": "error-title",
          "isShown": false,
          "containerId": "prebodysectionone"
        },
        {
          "ctype": "taskPanel",
          "containerId": "prebodysectionone",
          "header": {
            "title": "Last Note",
            "svgIcon": "description_icon",
            "iconClass": "active-header",
            "class": "po-specific"
          },
          "expanded": true,
          "hideToggle": true,
          "uuid": "LastNoteUUID",
          "visibility": false,
          "disabled": false,
          "hooks": [],
          "validations": [],
          "actions": [],
          "items": [
            {
              "ctype": "title",
              "uuid": "LastNoteTextUUID",
              "titleValue": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
              "titleValueClass": "body-italic text-secondary"
            }
          ],
          "footer": []
        },   
        {
          "ctype": "taskPanel",
          "containerId": "prebodysectiontwo",
          "header": {
            "title": "Repair Information",
            "svgIcon": "description_icon",
            "iconClass": "active-header",
            "class": "po-specific",
            "statusIcon": "hourglass_empty",
            "statusClass": "incomplete-status"
          },
          "expanded": true,
          "hideToggle": true,
          "uuid": "RepairInformationUUID",
          "visibility": false,
          "disabled": false,
          "hooks": [],
          "validations": [],
          "actions": [],
          "items": [
            {
              "ctype": "disabled",
              "uuid": "RepairInformationDisabledTaskUUID",
              "disabledClass": "disabledFalse"
            },
            {
              "ctype": "title",
              "uuid": "RepairInformationComplaintHeaderUUID",
              "titleValue": "Customer Complaint 2020-07-22. 12.02",
              "titleClass": "mb-1",
              "titleValueClass": "font-bold text-secondary"
            },
            {
              "ctype": "title",
              "uuid": "RepairInformationComplaintTextUUID",
              "titleValue": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
              "titleValueClass": "body-italic text-secondary"
            },
            {
              "ctype": "title",
              "uuid": "SpecialMessageHeaderUUID",
              "titleValue": "Special Message",
              "titleClass": "mb-1",
              "titleValueClass": "font-bold text-secondary"
            },
            {
              "ctype": "title",
              "uuid": "SpecialMessageTextUUID",
              "titleValue": "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
              "titleValueClass": "body-italic text-secondary"
            },
            {
              "ctype": "checkbox",
              "uuid": "RepairInformationCheckboxUUID",
              "name": "RepairInformationCheckbox",
              "hooks": [],
              "validations": [],
              "required": false,
              "submitable": true,
              "label": "I have read this message",
              "labelPosition": "after",
              "checkboxContainer": "",
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "RepairInformationcheck",
                    "data": "formData"
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "errorTitleUUID",
                    "properties": {
                      "titleValue": "",
                      "isShown": false
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "condition",
                  "config": {
                    "operation": "isEqualTo",
                    "lhs": "#RepairInformationcheck.RepairInformationCheckbox",
                    "rhs": true
                  },
                  "eventSource": "click",
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "RepairInformationSubmittedUUID",
                            "properties": {
                              "disabled": false
                            }
                          }
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "RepairInformationSubmittedUUID",
                            "properties": {
                              "disabled": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "footer": [
            {
              "ctype": "button",
              "color": "primary",
              "text": "Complete",
              "uuid": "RepairInformationSubmittedUUID",
              "name": "RepairInformationSubmitted",
              "visibility": true,
              "disabled": true,
              "checkGroupValidity": true,
              "type": "submit",
              "class": "primary-btn",
              "hooks": [],
              "validations": [],
              "actions": [
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "RepairInformationUUID",
                    "properties": {
                      "expanded": false,
                      "disabled": false,
                      "header": {
                        "title": "Repair Information",
                        "svgIcon": "description_icon",
                        "css": "color:black",
                        "statusIcon": "check_circle",
                        "statusClass": "complete-status",
                        "class": "complete-task",
                        "iconClass": "complete-task"
                      }
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "FinalTestUUID",
                    "properties": {
                      "disabled": false,
                      "expanded": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "RepairInformationSubmittedUUID",
                    "properties": {
                      "disabled": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "RepairInformationDisabledTaskUUID",
                    "properties": {
                      "disabledClass": "disabledTrue"
                    }
                  },
                  "eventSource": "click"
                }
              ]
            }
          ]
        },
        {
          "ctype": "taskPanel",
          "containerId": "prebodysectiontwo",
          "header": {
            "title": "Final Test",
            "svgIcon": "description_icon",
            "iconClass": "active-header",
            "class": "po-specific",
            "statusIcon": "hourglass_empty",
            "statusClass": "incomplete-status"
          },
          "expanded": false,
          "hideToggle": true,
          "uuid": "FinalTestUUID",
          "visibility": false,
          "disabled": true,
          "hooks": [],
          "validations": [],
          "actions": [],
          "items": [
            {
              "ctype": "disabled",
              "uuid": "FinalTestDisabledTaskUUID",
              "disabledClass": "disabledFalse"
            },
            {
              "ctype": "title",
              "uuid": "FinalTestTextUUID",
              "titleValue": "Record the result of Final Test",
              "titleValueClass": "body-italic text-secondary"
            },
            {
              "ctype": "actionToggle",
              "formGroupClass": "body2 d-flex justify-content-between  mb-2",
              "uuid": "FinalTestResultToggleUUID",
              "name": "FinalTestResultToggle",
              "subProcess": "ConfigRework",
              "label": "Final Test Result",
              "labelClass": "dell-greyish-black pt-2",
              "labelPosition": "before",
              "validations": [],
              "hooks": [],              
              "submitable": true,
              "options": [
                {
                  "bgcolor": "light-blue",
                  "color": "white",
                  "text": "Fail",
                  "value": "fail"
                },
                {
                  "bgcolor": "light-blue",
                  "color": "white",
                  "text": "Pass",
                  "value": "pass"
                }
              ],
              "actions": [
                {
                  "eventSource": "change",
                  "type": "context",
                  "config": {
                    "data": "elementControlValue",
                    "requestMethod": "add",
                    "key": "FinalTestResultToggledata"
                  }
                },
                {
                  "eventSource": "change",
                  "type": "condition",
                  "config": {
                    "operation": "isEqualTo",
                    "lhs": "#FinalTestResultToggledata",
                    "rhs": "fail"
                  },
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "FailureDescription1UUID",
                            "properties": {
                              "disabled": false                              
                            }
                          }                          
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": [
                        {
                          "type": "updateComponent",
                          "config": {
                            "key": "FailureDescription1UUID",
                            "properties": {
                              "disabled": true                              
                            }
                          }                          
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "ctype": "divider",
              "css": "border-top-color: rgb(74 71 71 / 12%);"
            },
            {
              "ctype": "nativeDropdown",
              "dropdownClass": "col-2 mb-3 mt-3 body2 reworkCommon",
              "uuid": "FailureDescription1UUID",
              "name": "FailureDescription1",
              "label": "Failure Description 1",
              "labelClass": "pl-0 align-left rework-lable-width mt-2",
              "disabled": true,
              "dataSource": "",
              "code": "dateCode",
              "displayValue": "dateCode",
              "required": true,
              "visibility": true,
              "actions": []
            },
            {
              "ctype": "nativeDropdown",
              "dropdownClass": "col-2 mb-3 mt-3 body2 reworkCommon",
              "uuid": "FailureDescription2UUID",
              "name": "FailureDescription2",
              "label": "Failure Description 2",
              "labelClass": "pl-0 align-left rework-lable-width mt-2",
              "disabled": true,
              "dataSource": "",
              "code": "dateCode",
              "displayValue": "dateCode",
              "required": true,
              "visibility": true,
              "actions": []
            },
            {
              "ctype": "nativeDropdown",
              "dropdownClass": "col-2 mb-3 mt-3 body2 reworkCommon",
              "uuid": "FailureDescription3UUID",
              "name": "FailureDescription3",
              "label": "Failure Description 3",
              "labelClass": "pl-0 align-left rework-lable-width mt-2",
              "disabled": true,
              "dataSource": "",
              "code": "dateCode",
              "displayValue": "dateCode",
              "required": true,
              "visibility": true,
              "actions": []
            }
          ],
          "footer": [
            {
              "ctype": "button",
              "color": "primary",
              "text": "Complete",
              "uuid": "FinalTestSubmittedUUID",
              "name": "FinalTestSubmitted",
              "visibility": true,
              "disabled": true,
              "checkGroupValidity": true,
              "type": "submit",
              "class": "primary-btn",
              "hooks": [],
              "validations": [],
              "actions": [
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "FinalTestUUID",
                    "properties": {
                      "expanded": false,
                      "disabled": false,
                      "header": {
                        "title": "Final Test",
                        "svgIcon": "description_icon",
                        "css": "color:black",
                        "statusIcon": "check_circle",
                        "statusClass": "complete-status",
                        "class": "complete-task",
                        "iconClass": "complete-task"
                      },
                      "isReworkClass": true,
                      "reworkClass": "reworkHeader"
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "LabelDetailsUUID",
                    "properties": {
                      "disabled": false,
                      "expanded": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "FinalTestSubmittedUUID",
                    "properties": {
                      "disabled": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "FinalTestDisabledTaskUUID",
                    "properties": {
                      "disabledClass": "disabledTrue"
                    }
                  },
                  "eventSource": "click"
                }
              ]
            }
          ]
        },
        {
          "ctype": "taskPanel",
          "containerId": "prebodysectiontwo",
          "header": {
            "title": "Label Details",
            "svgIcon": "description_icon",
            "iconClass": "active-header",
            "class": "po-specific",
            "statusIcon": "hourglass_empty",
            "statusClass": "incomplete-status"
          },
          "expanded": false,
          "hideToggle": true,
          "uuid": "LabelDetailsUUID",
          "visibility": false,
          "disabled": true,
          "hooks": [],
          "validations": [],
          "actions": [],
          "items": [
            {
              "ctype": "disabled",
              "uuid": "LabelDetailsDisabledTaskUUID",
              "disabledClass": "disabledFalse"
            },
            {
              "ctype": "title",
              "uuid": "LabelDetailsTextUUID",
              "titleValue": "Input the details found on the Label",
              "titleValueClass": "body-italic text-secondary"
            },            
            {
              "ctype": "textField",
              "uuid": "baseBtUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "baseBt",              
              "label": "BASE 10 BT",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "baseSnUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "baseSn",              
              "label": "BASE SN",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "EthMacUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "EthMac",
              "label": "ETH MAC",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "BluetoothMacUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "BluetoothMac",
              "label": "Bluetooth MAC",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "WifiMacUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "WifiMac",
              "label": "WIFI MAC",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "10BtSzámUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "10Btszám",
              "label": "10 BT szám",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            },
            {
              "ctype": "textField",
              "uuid": "IMEIUUID",
              "type": "text",
              "validations": [],
              "required": true,
              "placeholder": "Enter Text",              
              "focus": false,
              "formGroupClass": "textFields-FlexMode",
              "textfieldClass": "col-2 p-0 text-padding",
              "name": "IMEI",
              "label": "IMEI",
              "labelClass": "pl-0 rework-lable-width",
              "bindLabel": false,
              "actions": []
            }
          ],
          "footer": [
            {
              "ctype": "button",
              "color": "primary",
              "text": "Complete",
              "uuid": "LabelDetailsSubmittedUUID",
              "name": "FinalTestSubmitted",
              "visibility": true,
              "disabled": true,
              "checkGroupValidity": true,
              "type": "submit",
              "class": "primary-btn",
              "hooks": [],
              "validations": [],
              "actions": [
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "LabelDetailsUUID",
                    "properties": {
                      "expanded": false,
                      "disabled": false,
                      "header": {
                        "title": "Label Details",
                        "svgIcon": "description_icon",
                        "css": "color:black",
                        "statusIcon": "check_circle",
                        "statusClass": "complete-status",
                        "class": "complete-task",
                        "iconClass": "complete-task"
                      },
                      "isReworkClass": true,
                      "reworkClass": "reworkHeader"
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "LabelDetailsSubmittedUUID",
                    "properties": {
                      "disabled": true
                    }
                  },
                  "eventSource": "click"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "LabelDetailsDisabledTaskUUID",
                    "properties": {
                      "disabledClass": "disabledTrue"
                    }
                  },
                  "eventSource": "click"
                }
              ]
            }
          ]
        }
      ],
      "footer": [
        {
          "ctype": "toolbar",
          "toolbarClass": "pagecontent-footer",
          "items": [
            {
              "ctype": "iconbutton",
              "iconButtonClass": "footer-save body primary-btn",
              "text": "Exit",
              "uuid": "saveUUID",
              "visibility": true,
              "disabled": false,
              "type": "submit",
              "hooks": [],
              "validations": [],
              "icon": "save",
              "actions": [
                {
                  "type": "renderTemplate",
                  "config": {
                    "templateId": "dashboard.json",
                    "mode": "local"
                  },
                  "eventSource": "click"
                },
                {
                  "type": "clearAllContext",
                  "eventSource": "click"
                },
                {
                  "type": "microservice",
                  "config": {
                    "microserviceId": "getSearchCriteria",
                    "isLocal": false,
                    "LocalService": "assets/Responses/getSearchCriteria.json",
                    "requestMethod": "get",
                    "params": {
                      "locationId": "#userSelectedLocation",
                      "clientId": "#userSelectedClient",
                      "contractId": "#userSelectedContract",
                      "searchType": "#userSelectedSubProcessType",
                      "userName": "#userAccountInfo.PersonalDetails.USERID"
                    }
                  },
                  "eventSource": "click",
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "context",
                          "config": {
                            "requestMethod": "add",
                            "key": "getSearchCriteriaData",
                            "data": "responseData"
                          }
                        },
                        {
                          "type": "renderTemplate",
                          "config": {
                            "mode": "remote",
                            "targetId": "mainPageContentBody",
                            "templateId": "getSearchCriteriaData"
                          }
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": [
                        {
                          "type": "context",
                          "config": {
                            "requestMethod": "add",
                            "key": "errorDisp",
                            "data": "responseData"
                          }
                        },
                        {
                          "type": "condition",
                          "config": {
                            "operation": "isEqualTo",
                            "lhs": "#errorDisp",
                            "rhs": "No Record Found"
                          },
                          "responseDependents": {
                            "onSuccess": {
                              "actions": [
                                {
                                  "type": "updateComponent",
                                  "config": {
                                    "key": "errorTitleUUID",
                                    "properties": {
                                      "titleValue": "#errorDisp",
                                      "isShown": false
                                    }
                                  }
                                }
                              ]
                            },
                            "onFailure": {
                              "actions": [
                                {
                                  "type": "updateComponent",
                                  "config": {
                                    "key": "errorTitleUUID",
                                    "properties": {
                                      "titleValue": "#errorDisp",
                                      "isShown": true
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "ctype": "iconText",
              "uuid": "IconUUID",
              "iconTextClass": "footer-addNote addNoteCls body",
              "icon": "add_comment",
              "text": "Add Note",
              "iconPosition": "Before",
              "actions": [
                {
                  "type": "dialog",
                  "uuid": "addNoteDialogUUID",
                  "config": {
                    "title": "Add Note",
                    "items": [
                      {
                        "ctype": "textarea",
                        "name": "addNote",
                        "textareaClass": "note-class",
                        "uuid": "addNoteUUID",
                        "value": "#ReworkNotes.addNote",
                        "actions": []
                      }
                    ],
                    "footer": [
                      {
                        "ctype": "button",
                        "color": "primary",
                        "text": "Close",
                        "uuid": "closeButtonUUID",
                        "closeType": "close",
                        "inputClass": "close-button",
                        "disableClose": true,
                        "visibility": true,
                        "dialogButton": true,
                        "type": "",
                        "hooks": [],
                        "validations": [],
                        "actions": []
                      },
                      {
                        "ctype": "button",
                        "color": "primary",
                        "text": "Done",
                        "uuid": "doneHoldUUID",
                        "dialogButton": true,
                        "visibility": true,
                        "type": "submit",
                        "closeType": "success",
                        "hooks": [],
                        "validations": [],
                        "actions": []
                      }
                    ]
                  },
                  "eventSource": "click",
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "context",
                          "config": {
                            "requestMethod": "add",
                            "key": "ReworkNotes",
                            "data": "formData"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "ctype": "spacer",
              "uuid": "emptySpaceUUID",
              "class": "empty-space"
            },
            {
              "ctype": "nativeDropdown",
              "dropdownClass": "footer-dropdown dropdown-container body2",
              "uuid": "ResultCodeVerifoneTestUUID",
              "isDropdownNotSelected": true,
              "name": "ResultCodes",
              "dataSource": "",
              "code": "resultCode",
              "displayValue": "resultCode",
              "disabled": false,
              "actions": [
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "SelectedResultcode",
                    "data": "elementControlName"
                  },
                  "eventSource": "change"
                },
                {
                  "type": "updateComponent",
                  "config": {
                    "key": "ReworktimeoutUUID",
                    "properties": {
                      "disabled": false
                    }
                  },
                  "eventSource": "change"
                },
                {
                  "type": "context",
                  "config": {
                    "requestMethod": "add",
                    "key": "test",
                    "data": ""
                  },
                  "eventSource": "change"
                }
              ]
            },
            {
              "ctype": "button",
              "color": "primary",
              "buttonClass": "footer-button",
              "text": "Time Out",
              "uuid": "ReworktimeoutUUID",
              "visibility": true,
              "checkGroupValidity": false,
              "disabled": true,
              "hidden": false,
              "type": "submit",
              "hooks": [],
              "validations": [],
              "actions": [
                {
                  "type": "updateComponent",
                  "eventSource": "click",
                  "config": {
                    "key": "errorTitleUUID",
                    "properties": {
                      "titleValue": "",
                      "isShown": false
                    }
                  }
                },
                {
                  "type": "condition",
                  "config": {
                    "operation": "isValid",
                    "lhs": "#SelectedResultcode"
                  },
                  "eventSource": "click",
                  "responseDependents": {
                    "onSuccess": {
                      "actions": [
                        {
                          "type": "dialog",
                          "uuid": "addNoteDialogUUID2",
                          "config": {
                            "title": "Time Out",
                            "items": [
                              {
                                "ctype": "textarea",
                                "label": "Add note",
                                "name": "addNote",
                                "textareaContainer": "timeout-class",
                                "uuid": "addNoteTimeoutUUID2",
                                "required": false,
                                "value": "#ReworkNotes.addNote",
                                "actions": []
                              }
                            ],
                            "footer": [
                              {
                                "ctype": "button",
                                "color": "primary",
                                "text": "Close",
                                "uuid": "closeButtonUUID2",
                                "closeType": "close",
                                "inputClass": "close-button",
                                "disableClose": true,
                                "visibility": true,
                                "dialogButton": true,
                                "type": "",
                                "hooks": [],
                                "validations": [],
                                "actions": []
                              },
                              {
                                "ctype": "button",
                                "color": "primary",
                                "text": "Done",
                                "uuid": "doneHoldUUID2",
                                "dialogButton": true,
                                "visibility": true,
                                "disableClose": false,
                                "type": "submit",
                                "closeType": "success",
                                "hooks": [],
                                "validations": [],
                                "actions": []
                              }
                            ]
                          },
                          "eventSource": "click",
                          "responseDependents": {
                            "onSuccess": {
                              "actions": [
                                {
                                  "type": "context",
                                  "config": {
                                    "requestMethod": "add",
                                    "key": "ReworkNotes",
                                    "data": "formData"
                                  }
                                },
                                {
                                  "type": "condition",
                                  "config": {
                                    "operation": "isContains",
                                    "lhs": "#SelectedResultcode",
                                    "rhs": "fail"
                                  },
                                  "eventSource": "click",
                                  "responseDependents": {
                                    "onSuccess": {
                                      "actions": [
                                        {
                                          "type": "context",
                                          "config": {
                                            "requestMethod": "add",
                                            "key": "test",
                                            "data": "test"
                                          }
                                        },
                                        {
                                          "type": "condition",
                                          "config": {
                                            "operation": "isValid",
                                            "lhs": "#ReworkNotes.addNote"
                                          },
                                          "responseDependents": {
                                            "onSuccess": {
                                              "actions": [
                                                {
                                                  "type": "microservice",
                                                  "config": {
                                                    "microserviceId": "performTimeOut",
                                                    "requestMethod": "post",
                                                    "body": {
                                                      "timeOutRequest": {
                                                        "location": "#UnitInfo.GEONAME",
                                                        "bcn": "#UnitInfo.ITEM_BCN",
                                                        "workCenter": "#UnitInfo.WORKCENTER",
                                                        "password": "#loginUUID.password",
                                                        "warrantyInd": "false",
                                                        "notes": "#ReworkNotes.addNote",
                                                        "resultCode": "#SelectedResultcode"
                                                      },
                                                      "modifyWarranty": 0,
                                                      "timeOutType": "ProcessImmediate",
                                                      "clientName": "#UnitInfo.CLIENTNAME",
                                                      "contractName": "#UnitInfo.CONTRACTNAME",
                                                      "userName": "#loginUUID.username",
                                                      "userPass": "#loginUUID.password",
                                                      "ip": "::1",
                                                      "callSource": "FrontEnd",
                                                      "apiUsage_LocationName": "#UnitInfo.GEONAME",
                                                      "apiUsage_ClientName": "#UnitInfo.CLIENTNAME"
                                                    },
                                                    "toBeStringified": true,
                                                    "removeUndefinedFields": [
                                                      {
                                                        "KeyName": "notes",
                                                        "KeyValue": "#ReworkNotes.addNote"
                                                      }
                                                    ]
                                                  },
                                                  "responseDependents": {
                                                    "onSuccess": {
                                                      "actions": [
                                                        {
                                                          "type": "clearScreenData",
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "delete",
                                                            "key": "currentWC"
                                                          },
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "renderTemplate",
                                                          "config": {
                                                            "templateId": "dashboard.json",
                                                            "mode": "local"
                                                          },
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "microservice",
                                                          "config": {
                                                            "microserviceId": "getSearchCriteria",
                                                            "isLocal": false,
                                                            "LocalService": "assets/Responses/getSearchCriteria.json",
                                                            "requestMethod": "get",
                                                            "params": {
                                                              "locationId": "#userSelectedLocation",
                                                              "clientId": "#userSelectedClient",
                                                              "contractId": "#userSelectedContract",
                                                              "searchType": "#userSelectedSubProcessType",
                                                              "userName": "#userAccountInfo.PersonalDetails.USERID"
                                                            }
                                                          },
                                                          "eventSource": "click",
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "context",
                                                                  "config": {
                                                                    "requestMethod": "add",
                                                                    "key": "getSearchCriteriaData",
                                                                    "data": "responseData"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "renderTemplate",
                                                                  "config": {
                                                                    "mode": "remote",
                                                                    "targetId": "mainPageContentBody",
                                                                    "templateId": "getSearchCriteriaData"
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "context",
                                                                  "config": {
                                                                    "requestMethod": "add",
                                                                    "key": "errorDisp",
                                                                    "data": "responseData"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "condition",
                                                                  "config": {
                                                                    "operation": "isEqualTo",
                                                                    "lhs": "#errorDisp",
                                                                    "rhs": "No Record Found"
                                                                  },
                                                                  "responseDependents": {
                                                                    "onSuccess": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "updateComponent",
                                                                          "config": {
                                                                            "key": "errorTitleUUID",
                                                                            "properties": {
                                                                              "titleValue": "#errorDisp",
                                                                              "isShown": false
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "onFailure": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "updateComponent",
                                                                          "config": {
                                                                            "key": "errorTitleUUID",
                                                                            "properties": {
                                                                              "titleValue": "#errorDisp",
                                                                              "isShown": true
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "onFailure": {
                                                      "actions": [
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "add",
                                                            "key": "errorDisp",
                                                            "data": "responseData"
                                                          }
                                                        },
                                                        {
                                                          "type": "condition",
                                                          "config": {
                                                            "operation": "isEqualTo",
                                                            "lhs": "#errorDisp",
                                                            "rhs": "No Record Found"
                                                          },
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": false
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": true
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "onFailure": {
                                              "actions": [
                                                {
                                                  "type": "updateComponent",
                                                  "config": {
                                                    "key": "errorTitleUUID",
                                                    "properties": {
                                                      "titleValue": "Notes are mandatory for Result Code which starts with Fail",
                                                      "isShown": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "onFailure": {
                                      "actions": [
                                        {
                                          "type": "condition",
                                          "config": {
                                            "operation": "isEqualTo",
                                            "lhs": "#SelectedResultcode",
                                            "rhs": "PassPkg"
                                          },
                                          "eventSource": "change",
                                          "responseDependents": {
                                            "onSuccess": {
                                              "actions": [
                                                {
                                                  "type": "microservice",
                                                  "config": {
                                                    "microserviceId": "getprocessffbycountry",
                                                    "requestMethod": "get",
                                                    "params": {
                                                      "itemId": "#UnitInfo.ITEM_ID",
                                                      "resultCode": "#SelectedResultcode"
                                                    }
                                                  },
                                                  "responseDependents": {
                                                    "onSuccess": {
                                                      "actions": [
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "add",
                                                            "key": "getTestprocffbycountry",
                                                            "data": "responseData"
                                                          }
                                                        },
                                                        {
                                                          "type": "condition",
                                                          "config": {
                                                            "operation": "isEqualTo",
                                                            "lhs": "#getTestprocffbycountry.flexFieldName",
                                                            "rhs": "Country of Origin"
                                                          },
                                                          "eventSource": "change",
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "microservice",
                                                                  "config": {
                                                                    "microserviceId": "performTimeOut",
                                                                    "requestMethod": "post",
                                                                    "body": {
                                                                      "timeOutRequest": {
                                                                        "location": "#UnitInfo.GEONAME",
                                                                        "bcn": "#UnitInfo.ITEM_BCN",
                                                                        "workCenter": "#UnitInfo.WORKCENTER",
                                                                        "password": "#loginUUID.password",
                                                                        "warrantyInd": "false",
                                                                        "notes": "#ReworkNotes.addNote",
                                                                        "resultCode": "#SelectedResultcode"
                                                                      },
                                                                      "modifyWarranty": 0,
                                                                      "timeOutType": "ProcessImmediate",
                                                                      "clientName": "#UnitInfo.CLIENTNAME",
                                                                      "contractName": "#UnitInfo.CONTRACTNAME",
                                                                      "userName": "#loginUUID.username",
                                                                      "userPass": "#loginUUID.password",
                                                                      "ip": "::1",
                                                                      "callSource": "FrontEnd",
                                                                      "apiUsage_LocationName": "#UnitInfo.GEONAME",
                                                                      "apiUsage_ClientName": "#UnitInfo.CLIENTNAME"
                                                                    },
                                                                    "toBeStringified": true,
                                                                    "removeUndefinedFields": [
                                                                      {
                                                                        "KeyName": "notes",
                                                                        "KeyValue": "#ReworkNotes.addNote"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "responseDependents": {
                                                                    "onSuccess": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "clearScreenData",
                                                                          "eventSource": "click"
                                                                        },
                                                                        {
                                                                          "type": "context",
                                                                          "config": {
                                                                            "requestMethod": "delete",
                                                                            "key": "currentWC"
                                                                          },
                                                                          "eventSource": "click"
                                                                        },
                                                                        {
                                                                          "type": "renderTemplate",
                                                                          "config": {
                                                                            "templateId": "dashboard.json",
                                                                            "mode": "local"
                                                                          },
                                                                          "eventSource": "click"
                                                                        },
                                                                        {
                                                                          "type": "microservice",
                                                                          "config": {
                                                                            "microserviceId": "getSearchCriteria",
                                                                            "isLocal": false,
                                                                            "LocalService": "assets/Responses/getSearchCriteria.json",
                                                                            "requestMethod": "get",
                                                                            "params": {
                                                                              "locationId": "#userSelectedLocation",
                                                                              "clientId": "#userSelectedClient",
                                                                              "contractId": "#userSelectedContract",
                                                                              "searchType": "#userSelectedSubProcessType",
                                                                              "userName": "#userAccountInfo.PersonalDetails.USERID"
                                                                            }
                                                                          },
                                                                          "eventSource": "click",
                                                                          "responseDependents": {
                                                                            "onSuccess": {
                                                                              "actions": [
                                                                                {
                                                                                  "type": "context",
                                                                                  "config": {
                                                                                    "requestMethod": "add",
                                                                                    "key": "getSearchCriteriaData",
                                                                                    "data": "responseData"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "renderTemplate",
                                                                                  "config": {
                                                                                    "mode": "remote",
                                                                                    "targetId": "mainPageContentBody",
                                                                                    "templateId": "getSearchCriteriaData"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "onFailure": {
                                                                              "actions": [
                                                                                {
                                                                                  "type": "context",
                                                                                  "config": {
                                                                                    "requestMethod": "add",
                                                                                    "key": "errorDisp",
                                                                                    "data": "responseData"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "condition",
                                                                                  "config": {
                                                                                    "operation": "isEqualTo",
                                                                                    "lhs": "#errorDisp",
                                                                                    "rhs": "No Record Found"
                                                                                  },
                                                                                  "responseDependents": {
                                                                                    "onSuccess": {
                                                                                      "actions": [
                                                                                        {
                                                                                          "type": "updateComponent",
                                                                                          "config": {
                                                                                            "key": "errorTitleUUID",
                                                                                            "properties": {
                                                                                              "titleValue": "#errorDisp",
                                                                                              "isShown": false
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "onFailure": {
                                                                                      "actions": [
                                                                                        {
                                                                                          "type": "updateComponent",
                                                                                          "config": {
                                                                                            "key": "errorTitleUUID",
                                                                                            "properties": {
                                                                                              "titleValue": "#errorDisp",
                                                                                              "isShown": true
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "onFailure": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "context",
                                                                          "config": {
                                                                            "requestMethod": "add",
                                                                            "key": "errorDisp",
                                                                            "data": "responseData"
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "condition",
                                                                          "config": {
                                                                            "operation": "isEqualTo",
                                                                            "lhs": "#errorDisp",
                                                                            "rhs": "No Record Found"
                                                                          },
                                                                          "responseDependents": {
                                                                            "onSuccess": {
                                                                              "actions": [
                                                                                {
                                                                                  "type": "updateComponent",
                                                                                  "config": {
                                                                                    "key": "errorTitleUUID",
                                                                                    "properties": {
                                                                                      "titleValue": "#errorDisp",
                                                                                      "isShown": false
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "onFailure": {
                                                                              "actions": [
                                                                                {
                                                                                  "type": "updateComponent",
                                                                                  "config": {
                                                                                    "key": "errorTitleUUID",
                                                                                    "properties": {
                                                                                      "titleValue": "#errorDisp",
                                                                                      "isShown": true
                                                                                    }
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "Unit has no process flex field 'Country of Origin'",
                                                                      "isShown": true
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "onFailure": {
                                                      "actions": [
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "add",
                                                            "key": "errorDisp",
                                                            "data": "responseData"
                                                          }
                                                        },
                                                        {
                                                          "type": "condition",
                                                          "config": {
                                                            "operation": "isEqualTo",
                                                            "lhs": "#errorDisp",
                                                            "rhs": "No Record Found"
                                                          },
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": false
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": true
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "onFailure": {
                                              "actions": [
                                                {
                                                  "type": "microservice",
                                                  "config": {
                                                    "microserviceId": "performTimeOut",
                                                    "requestMethod": "post",
                                                    "body": {
                                                      "timeOutRequest": {
                                                        "location": "#UnitInfo.GEONAME",
                                                        "bcn": "#UnitInfo.ITEM_BCN",
                                                        "workCenter": "#UnitInfo.WORKCENTER",
                                                        "password": "#loginUUID.password",
                                                        "warrantyInd": "false",
                                                        "notes": "#ReworkNotes.addNote",
                                                        "resultCode": "#SelectedResultcode"
                                                      },
                                                      "modifyWarranty": 0,
                                                      "timeOutType": "ProcessImmediate",
                                                      "clientName": "#UnitInfo.CLIENTNAME",
                                                      "contractName": "#UnitInfo.CONTRACTNAME",
                                                      "userName": "#loginUUID.username",
                                                      "userPass": "#loginUUID.password",
                                                      "ip": "::1",
                                                      "callSource": "FrontEnd",
                                                      "apiUsage_LocationName": "#UnitInfo.GEONAME",
                                                      "apiUsage_ClientName": "#UnitInfo.CLIENTNAME"
                                                    },
                                                    "toBeStringified": true,
                                                    "removeUndefinedFields": [
                                                      {
                                                        "KeyName": "notes",
                                                        "KeyValue": "#ReworkNotes.addNote"
                                                      }
                                                    ]
                                                  },
                                                  "responseDependents": {
                                                    "onSuccess": {
                                                      "actions": [
                                                        {
                                                          "type": "clearScreenData",
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "delete",
                                                            "key": "currentWC"
                                                          },
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "renderTemplate",
                                                          "config": {
                                                            "templateId": "dashboard.json",
                                                            "mode": "local"
                                                          },
                                                          "eventSource": "click"
                                                        },
                                                        {
                                                          "type": "microservice",
                                                          "config": {
                                                            "microserviceId": "getSearchCriteria",
                                                            "isLocal": false,
                                                            "LocalService": "assets/Responses/getSearchCriteria.json",
                                                            "requestMethod": "get",
                                                            "params": {
                                                              "locationId": "#userSelectedLocation",
                                                              "clientId": "#userSelectedClient",
                                                              "contractId": "#userSelectedContract",
                                                              "searchType": "#userSelectedSubProcessType",
                                                              "userName": "#userAccountInfo.PersonalDetails.USERID"
                                                            }
                                                          },
                                                          "eventSource": "click",
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "context",
                                                                  "config": {
                                                                    "requestMethod": "add",
                                                                    "key": "getSearchCriteriaData",
                                                                    "data": "responseData"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "renderTemplate",
                                                                  "config": {
                                                                    "mode": "remote",
                                                                    "targetId": "mainPageContentBody",
                                                                    "templateId": "getSearchCriteriaData"
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "context",
                                                                  "config": {
                                                                    "requestMethod": "add",
                                                                    "key": "errorDisp",
                                                                    "data": "responseData"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "condition",
                                                                  "config": {
                                                                    "operation": "isEqualTo",
                                                                    "lhs": "#errorDisp",
                                                                    "rhs": "No Record Found"
                                                                  },
                                                                  "responseDependents": {
                                                                    "onSuccess": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "updateComponent",
                                                                          "config": {
                                                                            "key": "errorTitleUUID",
                                                                            "properties": {
                                                                              "titleValue": "#errorDisp",
                                                                              "isShown": false
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "onFailure": {
                                                                      "actions": [
                                                                        {
                                                                          "type": "updateComponent",
                                                                          "config": {
                                                                            "key": "errorTitleUUID",
                                                                            "properties": {
                                                                              "titleValue": "#errorDisp",
                                                                              "isShown": true
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "onFailure": {
                                                      "actions": [
                                                        {
                                                          "type": "context",
                                                          "config": {
                                                            "requestMethod": "add",
                                                            "key": "errorDisp",
                                                            "data": "responseData"
                                                          }
                                                        },
                                                        {
                                                          "type": "condition",
                                                          "config": {
                                                            "operation": "isEqualTo",
                                                            "lhs": "#errorDisp",
                                                            "rhs": "No Record Found"
                                                          },
                                                          "responseDependents": {
                                                            "onSuccess": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": false
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "onFailure": {
                                                              "actions": [
                                                                {
                                                                  "type": "updateComponent",
                                                                  "config": {
                                                                    "key": "errorTitleUUID",
                                                                    "properties": {
                                                                      "titleValue": "#errorDisp",
                                                                      "isShown": true
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "onFailure": {
                              "actions": [
                                {
                                  "type": "updateComponent",
                                  "eventSource": "click",
                                  "config": {
                                    "key": "errorTitleUUID",
                                    "properties": {
                                      "titleValue": "Data is not valid"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "onFailure": {
                      "actions": []
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    "Result": "SUCCESS"
  }